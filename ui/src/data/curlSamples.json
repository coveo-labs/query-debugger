{
  "dellsandbox_request": "Y3VybCAnaHR0cHM6Ly9wbGF0Zm9ybS5jbG91ZC5jb3Zlby5jb20vcmVzdC9zZWFyY2gvdjI/b3JnYW5pemF0aW9uSWQ9ZGVsbHNhbmRib3gmbWF4aW11bUFnZT0wJmRlYnVnUmFua2luZ0luZm9ybWF0aW9uPWZhbHNlJmRlYnVnPTEmcGlwZWxpbmU9ZGVmYXVsdCcgICAtSCAnYXV0aG9yaXR5OiBwbGF0Zm9ybS5jbG91ZC5jb3Zlby5jb20nICAgLUggJ3NlYy1jaC11YTogIkNocm9taXVtIjt2PSI5NCIsICJHb29nbGUgQ2hyb21lIjt2PSI5NCIsICI7Tm90IEEgQnJhbmQiO3Y9Ijk5IicgICAtSCAnYXV0aG9yaXphdGlvbjogQmVhcmVyIHhkZTkxY2RkNy02MGFlLTRhZTQtYmQ3YS01MzQ5MGIwMjY3NTMnICAgLUggJ2NvbnRlbnQtdHlwZTogYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkOyBjaGFyc2V0PVVURi04JyAgIC1IICdzZWMtY2gtdWEtbW9iaWxlOiA/MCcgICAtSCAndXNlci1hZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk0LjAuNDYwNi44MSBTYWZhcmkvNTM3LjM2JyAgIC1IICdzZWMtY2gtdWEtcGxhdGZvcm06ICJXaW5kb3dzIicgICAtSCAnYWNjZXB0OiAqLyonICAgLUggJ29yaWdpbjogaHR0cHM6Ly9wbGF0Zm9ybS5jbG91ZC5jb3Zlby5jb20nICAgLUggJ3NlYy1mZXRjaC1zaXRlOiBzYW1lLW9yaWdpbicgICAtSCAnc2VjLWZldGNoLW1vZGU6IGNvcnMnICAgLUggJ3NlYy1mZXRjaC1kZXN0OiBlbXB0eScgICAtSCAncmVmZXJlcjogaHR0cHM6Ly9wbGF0Zm9ybS5jbG91ZC5jb3Zlby5jb20vYWRtaW4vJyAgIC1IICdhY2NlcHQtbGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45LG5sO3E9MC44LGRlO3E9MC43JyAgIC1IICdjb29raWU6IF9nYT1HQTEuMi40MTMyMzkwMi4xNjMxMDg2NDQ1OyB2aXNpdG9yPTc0OWZhZWNiLTc0MzItNDg2Ni05OTFiLWJlMTNjNWVjYzg5MjsgT3B0YW5vbkFsZXJ0Qm94Q2xvc2VkPTIwMjEtMDktMDhUMDg6MDU6MjcuMzEyWjsgX21rdG9fdHJrPWlkOjk2OS1HQ0EtODg5JnRva2VuOl9tY2gtY292ZW8uY29tLTE2MzEwODgzMjc0NTgtNzA3Nzk7IF9oamlkPTAyYTlhNjMzLWJmYjEtNDRiNC05MDhhLWI1NzRkNDE0NzcyZTsgX2Jpel91aWQ9NzIxMmIzZGJiOTYxNGVkMWU0YTlkNDA1NGEzOTljODM7IF9iaXpfZmxhZ3NBPSU3QiUyMlZlcnNpb24lMjIlM0ExJTJDJTIyTWt0byUyMiUzQSUyMjElMjIlMkMlMjJWaWV3VGhyb3VnaCUyMiUzQSUyMjElMjIlMkMlMjJYRG9tYWluJTIyJTNBJTIyMSUyMiU3RDsgX2djbF9hdT0xLjEuMzU2MjQyMzk5LjE2MzExMDU0NzY7IF9mYnA9ZmIuMS4xNjMxMTA1NDc3ODE3LjEzNTc2MzExMDQ7IF91ZXR2aWQ9MDMxNTg1NzAwMTA2MTFlYzk4ZWY3MTg1M2Y4NDM1ODk7IGRyaWZ0X2FpZD0zNjgxYjk2OS0xZDFmLTQ2NDEtODkwMi03NjI4ZDBhZmU3MTA7IGRyaWZ0dF9haWQ9MzY4MWI5NjktMWQxZi00NjQxLTg5MDItNzYyOGQwYWZlNzEwOyBhbXBfMzQyY2ZkPVBhUTcyUHFiM01LV1lxSld1a0t6OXIuTURVMVl6VXpPRGc0T1Rjek1XTTFZbVJoWlRjNU9EUTVNVGxpT1RrNVptTT0uLjFmaDhiNDhwOC4xZmg4YjUxNHEuNC41Ljk7IGFtcGxpdHVkZV9pZF84OTljN2UyOWE5NDBiZjc4NDg5YWM1ZWRiNzc4NDQ5ZWNvdmVvLmNvbT1leUprWlhacFkyVkpaQ0k2SW1ZMU1HTTBOek5sTFdJNU1UVXROR0UyWmkwNFlqazNMV1V4Wm1abFpqVTFZekJrWlZJaUxDSjFjMlZ5U1dRaU9pSTBNREF3TWpRMUxUUXhOU0lzSW05d2RFOTFkQ0k2Wm1Gc2MyVXNJbk5sYzNOcGIyNUpaQ0k2TVRZek16VXlOVFUyT0RNMU15d2liR0Z6ZEVWMlpXNTBWR2x0WlNJNk1UWXpNelV5TlRVM056TTVOaXdpWlhabGJuUkpaQ0k2TXpVc0ltbGtaVzUwYVdaNVNXUWlPalV5TENKelpYRjFaVzVqWlU1MWJXSmxjaUk2T0RkOTsgY292ZW9fdmlzaXRvcklkPTc0OWZhZWNiLTc0MzItNDg2Ni05OTFiLWJlMTNjNWVjYzg5MjsgX2dpZD1HQTEuMi40NDU4MjczMTYuMTYzNDUzNTc1NTsgTFNLZXktYyRjb3Zlb192aXNpdG9ySWQ9NzQ5ZmFlY2ItNzQzMi00ODY2LTk5MWItYmUxM2M1ZWNjODkyOyBPcHRhbm9uQ29uc2VudD1pc0dwY0VuYWJsZWQ9MCZkYXRlc3RhbXA9TW9uK09jdCsxOCsyMDIxKzA5JTNBMjglM0E0NitHTVQlMkIwMjAwKyhDZW50cmFsK0V1cm9wZWFuK1N1bW1lcitUaW1lKSZ2ZXJzaW9uPTYuMjIuMCZpc0lBQkdsb2JhbD1mYWxzZSZob3N0cz0mY29uc2VudElkPTliODU4MGE5LTY2YWEtNDMwMi1iYzRjLWVjMDI4ZjliNzRkNSZpbnRlcmFjdGlvbkNvdW50PTEmbGFuZGluZ1BhdGg9Tm90TGFuZGluZ1BhZ2UmZ3JvdXBzPUMwMDAxJTNBMSUyQ0MwMDAzJTNBMSUyQ0MwMDAyJTNBMSUyQ0MwMDA0JTNBMSZnZW9sb2NhdGlvbj1OTCUzQkZMJkF3YWl0aW5nUmVjb25zZW50PWZhbHNlOyBjb3Zlb192aXNpdG9ySWQ9NzQ5ZmFlY2ItNzQzMi00ODY2LTk5MWItYmUxM2M1ZWNjODkyOyBhbXBfODY2MGRhPXRrVFRlcDV3TTc0VW1LRk1xVnRMUnYuZDI1cGFtMWxhV3BsY2tCamIzWmxieTVqYjIwPS4uMWZpY2ZtYjU0LjFmaWNmbWJpYy4xLjEuMjsgYW1wX2EzZjVhMD1ZcTNyVGFxLWxzRnY1RXBQZzJkQ1lmLk1EVTFZelV6T0RnNE9UY3pNV00xWW1SaFpUYzVPRFE1TVRsaU9UazVabU09Li4xZmllajNyZXAuMWZpZWpjZTQwLjcuay5yOyBfYml6X25BPTIwNDsgX2Jpel9wZW5kaW5nQT0lNUIlNUQ7IF9oalNlc3Npb25Vc2VyXzIyNTI0NzI9eyJpZCI6IjEyN2M0OTYzLTkyYTgtNWNhYi04ZGNlLTA4YTczOTVjMjg0ZSIsImNyZWF0ZWQiOjE2MzQ3Mjk0MTEwMjMsImV4aXN0aW5nIjpmYWxzZX07IHZpZXdCYW5uZXJSMzYwUTNWT0Q9MzY7IFNFU1NJT049NmQ4YzA2ZjktMjUzYS00ZTFkLWFjOGEtN2Q4MWNiMjRlMDJjJyAgIC0tZGF0YS1yYXcgJ2FjdGlvbnNIaXN0b3J5PSU1QiU1RCZyZWZlcnJlcj1odHRwcyUzQSUyRiUyRnBsYXRmb3JtLmNsb3VkLmNvdmVvLmNvbSUyRmFkbWluJTJGJmFuYWx5dGljcz0lN0IlMjJjbGllbnRJZCUyMiUzQSUyMjc0OWZhZWNiLTc0MzItNDg2Ni05OTFiLWJlMTNjNWVjYzg5MiUyMiUyQyUyMmRvY3VtZW50TG9jYXRpb24lMjIlM0ElMjJodHRwcyUzQSUyRiUyRnBsYXRmb3JtLmNsb3VkLmNvdmVvLmNvbSUyRmFkbWluJTJGJTIzZGVsbHNhbmRib3glMkZjb250ZW50JTJGYnJvd3NlciUyRiUzRmMyOXlkRDF5Wld4bGRtRnVZM2ttWkdWaWRXYzlNU1p3YVhCbGJHbHVaVDFrWldaaGRXeDAlMjIlMkMlMjJkb2N1bWVudFJlZmVycmVyJTIyJTNBJTIyaHR0cHMlM0ElMkYlMkZwbGF0Zm9ybS5jbG91ZC5jb3Zlby5jb20lMkZhZG1pbiUyRiUyMiUyQyUyMnBhZ2VJZCUyMiUzQSUyMiUyMiU3RCZ2aXNpdG9ySWQ9NzQ5ZmFlY2ItNzQzMi00ODY2LTk5MWItYmUxM2M1ZWNjODkyJmlzR3Vlc3RVc2VyPWZhbHNlJnNlYXJjaEh1Yj1BZG1pbkNvbnNvbGUmbG9jYWxlPWVuJmZpcnN0UmVzdWx0PTAmbnVtYmVyT2ZSZXN1bHRzPTEyJmV4Y2VycHRMZW5ndGg9MTAwJmVuYWJsZURpZFlvdU1lYW49dHJ1ZSZzb3J0Q3JpdGVyaWE9cmVsZXZhbmN5JnF1ZXJ5RnVuY3Rpb25zPSU1QiU1RCZyYW5raW5nRnVuY3Rpb25zPSU1QiU1RCZncm91cEJ5PSU1QiU3QiUyMmZpZWxkJTIyJTNBJTIyJTQwc291cmNlJTIyJTJDJTIybWF4aW11bU51bWJlck9mVmFsdWVzJTIyJTNBNiUyQyUyMnNvcnRDcml0ZXJpYSUyMiUzQSUyMm9jY3VycmVuY2VzJTIyJTJDJTIyaW5qZWN0aW9uRGVwdGglMjIlM0ExMDAwJTJDJTIyY29tcGxldGVGYWNldFdpdGhTdGFuZGFyZFZhbHVlcyUyMiUzQXRydWUlMkMlMjJhbGxvd2VkVmFsdWVzJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyZmllbGQlMjIlM0ElMjIlNDBvYmplY3R0eXBlJTIyJTJDJTIybWF4aW11bU51bWJlck9mVmFsdWVzJTIyJTNBNiUyQyUyMnNvcnRDcml0ZXJpYSUyMiUzQSUyMm9jY3VycmVuY2VzJTIyJTJDJTIyaW5qZWN0aW9uRGVwdGglMjIlM0ExMDAwJTJDJTIyY29tcGxldGVGYWNldFdpdGhTdGFuZGFyZFZhbHVlcyUyMiUzQXRydWUlMkMlMjJhbGxvd2VkVmFsdWVzJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyZmllbGQlMjIlM0ElMjIlNDBmaWxldHlwZSUyMiUyQyUyMm1heGltdW1OdW1iZXJPZlZhbHVlcyUyMiUzQTYlMkMlMjJzb3J0Q3JpdGVyaWElMjIlM0ElMjJvY2N1cnJlbmNlcyUyMiUyQyUyMmluamVjdGlvbkRlcHRoJTIyJTNBMTAwMCUyQyUyMmNvbXBsZXRlRmFjZXRXaXRoU3RhbmRhcmRWYWx1ZXMlMjIlM0F0cnVlJTJDJTIyYWxsb3dlZFZhbHVlcyUyMiUzQSU1QiU1RCU3RCUyQyU3QiUyMmZpZWxkJTIyJTNBJTIyJTQwYXV0aG9yJTIyJTJDJTIybWF4aW11bU51bWJlck9mVmFsdWVzJTIyJTNBNiUyQyUyMnNvcnRDcml0ZXJpYSUyMiUzQSUyMm9jY3VycmVuY2VzJTIyJTJDJTIyaW5qZWN0aW9uRGVwdGglMjIlM0ExMDAwJTJDJTIyY29tcGxldGVGYWNldFdpdGhTdGFuZGFyZFZhbHVlcyUyMiUzQXRydWUlMkMlMjJhbGxvd2VkVmFsdWVzJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyZmllbGQlMjIlM0ElMjIlNDB5ZWFyJTIyJTJDJTIybWF4aW11bU51bWJlck9mVmFsdWVzJTIyJTNBNiUyQyUyMnNvcnRDcml0ZXJpYSUyMiUzQSUyMm9jY3VycmVuY2VzJTIyJTJDJTIyaW5qZWN0aW9uRGVwdGglMjIlM0ExMDAwJTJDJTIyY29tcGxldGVGYWNldFdpdGhTdGFuZGFyZFZhbHVlcyUyMiUzQXRydWUlMkMlMjJhbGxvd2VkVmFsdWVzJTIyJTNBJTVCJTVEJTdEJTJDJTdCJTIyZmllbGQlMjIlM0ElMjIlNDBtb250aCUyMiUyQyUyMm1heGltdW1OdW1iZXJPZlZhbHVlcyUyMiUzQTYlMkMlMjJzb3J0Q3JpdGVyaWElMjIlM0ElMjJvY2N1cnJlbmNlcyUyMiUyQyUyMmluamVjdGlvbkRlcHRoJTIyJTNBMTAwMCUyQyUyMmNvbXBsZXRlRmFjZXRXaXRoU3RhbmRhcmRWYWx1ZXMlMjIlM0F0cnVlJTJDJTIyYWxsb3dlZFZhbHVlcyUyMiUzQSU1QiU1RCU3RCU1RCZmYWNldE9wdGlvbnM9JTdCJTdEJmNhdGVnb3J5RmFjZXRzPSU1QiU1RCZyZXRyaWV2ZUZpcnN0U2VudGVuY2VzPXRydWUmdGltZXpvbmU9RXVyb3BlJTJGQW1zdGVyZGFtJmVuYWJsZVF1ZXJ5U3ludGF4PWZhbHNlJmVuYWJsZUR1cGxpY2F0ZUZpbHRlcmluZz1mYWxzZSZlbmFibGVDb2xsYWJvcmF0aXZlUmF0aW5nPWZhbHNlJmRlYnVnPXRydWUmYWxsb3dRdWVyaWVzV2l0aG91dEtleXdvcmRzPXRydWUnICAgLS1jb21wcmVzc2Vk",
  "dellsandbox_response": "{"type":"Buffer","data":[123,10,32,32,34,116,111,116,97,108,67,111,117,110,116,34,32,58,32,49,53,56,55,49,48,55,57,44,10,32,32,34,116,111,116,97,108,67,111,117,110,116,70,105,108,116,101,114,101,100,34,32,58,32,49,53,56,55,49,48,55,57,44,10,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,49,48,44,10,32,32,34,105,110,100,101,120,68,117,114,97,116,105,111,110,34,32,58,32,55,48,44,10,32,32,34,114,101,113,117,101,115,116,68,117,114,97,116,105,111,110,34,32,58,32,57,54,44,10,32,32,34,115,101,97,114,99,104,85,105,100,34,32,58,32,34,52,54,101,99,102,55,55,55,45,56,98,55,57,45,52,102,51,52,45,98,53,52,51,45,51,53,53,101,50,49,97,51,98,99,48,100,34,44,10,32,32,34,112,105,112,101,108,105,110,101,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,34,97,112,105,86,101,114,115,105,111,110,34,32,58,32,50,44,10,32,32,34,98,97,115,105,99,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,34,97,100,118,97,110,99,101,100,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,34,108,97,114,103,101,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,34,99,111,110,115,116,97,110,116,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,34,100,105,115,106,117,110,99,116,105,111,110,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,34,109,97,110,100,97,116,111,114,121,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,34,117,115,101,114,73,100,101,110,116,105,116,105,101,115,34,32,58,32,91,32,123,10,32,32,32,32,34,110,97,109,101,34,32,58,32,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,34,44,10,32,32,32,32,34,112,114,111,118,105,100,101,114,34,32,58,32,34,69,109,97,105,108,32,83,101,99,117,114,105,116,121,32,80,114,111,118,105,100,101,114,34,44,10,32,32,32,32,34,116,121,112,101,34,32,58,32,34,85,115,101,114,34,10,32,32,125,32,93,44,10,32,32,34,114,97,110,107,105,110,103,69,120,112,114,101,115,115,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,34,114,97,110,107,105,110,103,69,120,112,114,101,115,115,105,111,110,71,114,111,117,112,115,34,32,58,32,91,32,93,44,10,32,32,34,116,111,112,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,34,101,120,101,99,117,116,105,111,110,82,101,112,111,114,116,34,32,58,32,123,10,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,56,55,44,10,32,32,32,32,34,99,104,105,108,100,114,101,110,34,32,58,32,91,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,113,117,101,115,116,73,100,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,84,104,101,32,105,100,32,99,111,114,114,101,108,97,116,105,110,103,32,108,111,103,115,32,102,111,114,32,116,104,105,115,32,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,34,88,45,82,101,113,117,101,115,116,45,73,68,34,32,58,32,34,101,101,48,102,97,99,51,54,45,53,55,49,97,45,52,56,97,99,45,97,54,49,53,45,98,97,54,102,56,48,99,54,51,102,99,97,34,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,79,114,103,97,110,105,122,97,116,105,111,110,32,73,68,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,79,114,103,97,110,105,122,97,116,105,111,110,32,73,68,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,44,10,32,32,32,32,32,32,34,99,111,118,101,111,95,111,114,103,97,110,105,122,97,116,105,111,110,34,32,58,32,34,100,101,108,108,115,97,110,100,98,111,120,34,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,80,101,114,102,111,114,109,65,117,116,104,101,110,116,105,99,97,116,105,111,110,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,101,114,102,111,114,109,32,97,117,116,104,101,110,116,105,99,97,116,105,111,110,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,110,102,105,103,117,114,101,100,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,112,114,105,109,97,114,121,34,32,58,32,34,67,108,111,117,100,84,111,107,101,110,34,44,10,32,32,32,32,32,32,32,32,34,115,101,99,111,110,100,97,114,121,34,32,58,32,91,32,34,111,110,101,108,111,103,105,110,106,109,100,34,44,32,34,115,115,111,34,32,93,44,10,32,32,32,32,32,32,32,32,34,109,97,110,100,97,116,111,114,121,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,117,115,101,114,73,100,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,34,44,10,32,32,32,32,32,32,32,32,32,32,34,107,105,110,100,34,32,58,32,34,85,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,34,112,114,111,118,105,100,101,114,34,32,58,32,34,69,109,97,105,108,32,83,101,99,117,114,105,116,121,32,80,114,111,118,105,100,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,34,105,110,102,111,115,34,32,58,32,123,32,125,10,32,32,32,32,32,32,32,32,125,32,93,44,10,32,32,32,32,32,32,32,32,34,114,111,108,101,115,34,32,58,32,91,32,34,113,117,101,114,121,69,120,101,99,117,116,111,114,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,87,114,105,116,101,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,67,114,101,97,116,101,34,44,32,34,115,101,97,114,99,104,80,97,103,101,82,101,97,100,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,82,101,97,100,34,44,32,34,115,101,97,114,99,104,80,97,103,101,87,114,105,116,101,34,32,93,44,10,32,32,32,32,32,32,32,32,34,113,117,101,114,121,82,101,115,116,114,105,99,116,105,111,110,115,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,112,105,112,101,108,105,110,101,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,117,115,101,114,71,114,111,117,112,115,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,99,104,105,108,100,114,101,110,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,115,111,108,118,101,80,114,111,118,105,100,101,114,65,117,116,104,101,110,116,105,99,97,116,105,111,110,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,82,101,115,111,108,118,101,32,97,117,116,104,101,110,116,105,99,97,116,105,111,110,32,111,102,32,112,114,111,118,105,100,101,114,58,32,67,108,111,117,100,84,111,107,101,110,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,117,115,101,114,73,100,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,107,105,110,100,34,32,58,32,34,85,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,114,111,118,105,100,101,114,34,32,58,32,34,69,109,97,105,108,32,83,101,99,117,114,105,116,121,32,80,114,111,118,105,100,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,102,111,115,34,32,58,32,123,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,111,108,101,115,34,32,58,32,91,32,34,113,117,101,114,121,69,120,101,99,117,116,111,114,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,87,114,105,116,101,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,67,114,101,97,116,101,34,44,32,34,115,101,97,114,99,104,80,97,103,101,82,101,97,100,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,82,101,97,100,34,44,32,34,115,101,97,114,99,104,80,97,103,101,87,114,105,116,101,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,113,117,101,114,121,82,101,115,116,114,105,99,116,105,111,110,115,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,105,112,101,108,105,110,101,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,117,115,101,114,71,114,111,117,112,115,34,32,58,32,91,32,93,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,77,101,114,103,101,65,117,116,104,101,110,116,105,99,97,116,105,111,110,115,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,77,101,114,103,101,32,97,117,116,104,101,110,116,105,99,97,116,105,111,110,115,32,40,105,102,32,110,101,101,100,101,100,41,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,117,115,101,114,73,100,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,107,105,110,100,34,32,58,32,34,85,115,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,114,111,118,105,100,101,114,34,32,58,32,34,69,109,97,105,108,32,83,101,99,117,114,105,116,121,32,80,114,111,118,105,100,101,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,105,110,102,111,115,34,32,58,32,123,32,125,10,32,32,32,32,32,32,32,32,32,32,125,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,111,108,101,115,34,32,58,32,91,32,34,113,117,101,114,121,69,120,101,99,117,116,111,114,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,87,114,105,116,101,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,67,114,101,97,116,101,34,44,32,34,115,101,97,114,99,104,80,97,103,101,82,101,97,100,34,44,32,34,113,117,101,114,121,80,105,112,101,108,105,110,101,82,101,97,100,34,44,32,34,115,101,97,114,99,104,80,97,103,101,87,114,105,116,101,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,113,117,101,114,121,82,101,115,116,114,105,99,116,105,111,110,115,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,105,112,101,108,105,110,101,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,117,115,101,114,71,114,111,117,112,115,34,32,58,32,91,32,93,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,115,111,108,118,101,67,111,110,116,101,120,116,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,82,101,115,111,108,118,101,32,99,111,110,116,101,120,116,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,117,115,101,114,65,103,101,110,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,114,97,119,34,32,58,32,34,77,111,122,105,108,108,97,47,53,46,48,32,40,87,105,110,100,111,119,115,32,78,84,32,49,48,46,48,59,32,87,105,110,54,52,59,32,120,54,52,41,32,65,112,112,108,101,87,101,98,75,105,116,47,53,51,55,46,51,54,32,40,75,72,84,77,76,44,32,108,105,107,101,32,71,101,99,107,111,41,32,67,104,114,111,109,101,47,57,52,46,48,46,52,54,48,54,46,56,49,32,83,97,102,97,114,105,47,53,51,55,46,51,54,34,44,10,32,32,32,32,32,32,32,32,32,32,34,98,114,111,119,115,101,114,34,32,58,32,91,32,34,99,104,114,111,109,101,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,100,101,118,105,99,101,34,32,58,32,91,32,34,100,101,115,107,116,111,112,34,44,32,34,112,99,34,44,32,34,119,105,110,100,111,119,115,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,111,115,34,32,58,32,91,32,34,119,105,110,100,111,119,115,34,32,93,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,115,101,97,114,99,104,72,117,98,34,32,58,32,34,65,100,109,105,110,67,111,110,115,111,108,101,34,44,10,32,32,32,32,32,32,32,32,34,116,97,98,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,114,101,102,101,114,114,101,114,34,32,58,32,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,34,44,10,32,32,32,32,32,32,32,32,34,108,111,99,97,108,101,34,32,58,32,34,101,110,34,44,10,32,32,32,32,32,32,32,32,34,99,111,110,116,101,120,116,34,32,58,32,123,32,125,44,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,115,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,97,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,99,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,100,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,108,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,101,110,97,98,108,101,68,117,112,108,105,99,97,116,101,70,105,108,116,101,114,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,82,97,110,103,101,34,32,58,32,53,44,10,32,32,32,32,32,32,32,32,34,112,97,114,101,110,116,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,99,104,105,108,100,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,114,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,108,111,119,101,114,99,97,115,101,79,112,101,114,97,116,111,114,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,115,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,91,32,34,114,101,108,101,118,97,110,99,121,34,32,93,10,32,32,32,32,32,32,125,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,115,111,108,118,101,80,105,112,101,108,105,110,101,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,82,101,115,111,108,118,101,32,112,105,112,101,108,105,110,101,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,44,10,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,112,105,112,101,108,105,110,101,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,32,32,34,112,105,112,101,108,105,110,101,73,100,34,32,58,32,34,55,48,101,53,48,55,53,101,45,100,53,50,52,45,52,97,51,48,45,57,102,48,100,45,48,51,53,54,101,51,102,54,99,51,51,102,34,44,10,32,32,32,32,32,32,32,32,34,112,105,112,101,108,105,110,101,72,97,115,104,34,32,58,32,34,48,49,52,102,102,97,97,101,55,51,101,57,54,98,48,48,51,57,51,100,51,55,53,100,52,101,55,57,53,99,101,48,34,44,10,32,32,32,32,32,32,32,32,34,115,112,108,105,116,84,101,115,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,115,116,97,116,101,109,101,110,116,71,114,111,117,112,115,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,115,111,108,118,101,67,111,110,116,101,120,116,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,82,101,115,111,108,118,101,32,99,111,110,116,101,120,116,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,44,10,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,117,115,101,114,65,103,101,110,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,114,97,119,34,32,58,32,34,77,111,122,105,108,108,97,47,53,46,48,32,40,87,105,110,100,111,119,115,32,78,84,32,49,48,46,48,59,32,87,105,110,54,52,59,32,120,54,52,41,32,65,112,112,108,101,87,101,98,75,105,116,47,53,51,55,46,51,54,32,40,75,72,84,77,76,44,32,108,105,107,101,32,71,101,99,107,111,41,32,67,104,114,111,109,101,47,57,52,46,48,46,52,54,48,54,46,56,49,32,83,97,102,97,114,105,47,53,51,55,46,51,54,34,44,10,32,32,32,32,32,32,32,32,32,32,34,98,114,111,119,115,101,114,34,32,58,32,91,32,34,99,104,114,111,109,101,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,100,101,118,105,99,101,34,32,58,32,91,32,34,100,101,115,107,116,111,112,34,44,32,34,112,99,34,44,32,34,119,105,110,100,111,119,115,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,111,115,34,32,58,32,91,32,34,119,105,110,100,111,119,115,34,32,93,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,115,101,97,114,99,104,72,117,98,34,32,58,32,34,65,100,109,105,110,67,111,110,115,111,108,101,34,44,10,32,32,32,32,32,32,32,32,34,116,97,98,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,114,101,102,101,114,114,101,114,34,32,58,32,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,34,44,10,32,32,32,32,32,32,32,32,34,108,111,99,97,108,101,34,32,58,32,34,101,110,34,44,10,32,32,32,32,32,32,32,32,34,99,111,110,116,101,120,116,34,32,58,32,123,32,125,44,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,115,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,97,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,99,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,100,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,108,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,101,110,97,98,108,101,68,117,112,108,105,99,97,116,101,70,105,108,116,101,114,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,82,97,110,103,101,34,32,58,32,53,44,10,32,32,32,32,32,32,32,32,34,112,97,114,101,110,116,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,99,104,105,108,100,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,114,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,108,111,119,101,114,99,97,115,101,79,112,101,114,97,116,111,114,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,115,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,91,32,34,114,101,108,101,118,97,110,99,121,34,32,93,10,32,32,32,32,32,32,125,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,112,112,108,121,81,117,101,114,121,80,97,114,97,109,79,118,101,114,114,105,100,101,70,101,97,116,117,114,101,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,65,112,112,108,121,32,39,113,117,101,114,121,80,97,114,97,109,79,118,101,114,114,105,100,101,39,32,114,117,108,101,115,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,34,97,112,112,108,105,101,100,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,115,111,108,118,101,67,111,110,116,101,120,116,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,82,101,115,111,108,118,101,32,99,111,110,116,101,120,116,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,44,10,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,117,115,101,114,65,103,101,110,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,114,97,119,34,32,58,32,34,77,111,122,105,108,108,97,47,53,46,48,32,40,87,105,110,100,111,119,115,32,78,84,32,49,48,46,48,59,32,87,105,110,54,52,59,32,120,54,52,41,32,65,112,112,108,101,87,101,98,75,105,116,47,53,51,55,46,51,54,32,40,75,72,84,77,76,44,32,108,105,107,101,32,71,101,99,107,111,41,32,67,104,114,111,109,101,47,57,52,46,48,46,52,54,48,54,46,56,49,32,83,97,102,97,114,105,47,53,51,55,46,51,54,34,44,10,32,32,32,32,32,32,32,32,32,32,34,98,114,111,119,115,101,114,34,32,58,32,91,32,34,99,104,114,111,109,101,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,100,101,118,105,99,101,34,32,58,32,91,32,34,100,101,115,107,116,111,112,34,44,32,34,112,99,34,44,32,34,119,105,110,100,111,119,115,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,111,115,34,32,58,32,91,32,34,119,105,110,100,111,119,115,34,32,93,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,115,101,97,114,99,104,72,117,98,34,32,58,32,34,65,100,109,105,110,67,111,110,115,111,108,101,34,44,10,32,32,32,32,32,32,32,32,34,116,97,98,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,114,101,102,101,114,114,101,114,34,32,58,32,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,34,44,10,32,32,32,32,32,32,32,32,34,108,111,99,97,108,101,34,32,58,32,34,101,110,34,44,10,32,32,32,32,32,32,32,32,34,99,111,110,116,101,120,116,34,32,58,32,123,32,125,44,10,32,32,32,32,32,32,32,32,34,101,120,112,114,101,115,115,105,111,110,115,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,97,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,99,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,100,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,32,32,34,108,113,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,111,114,105,103,105,110,97,108,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,112,97,114,115,101,100,34,32,58,32,110,117,108,108,10,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,101,110,97,98,108,101,68,117,112,108,105,99,97,116,101,70,105,108,116,101,114,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,82,97,110,103,101,34,32,58,32,53,44,10,32,32,32,32,32,32,32,32,34,112,97,114,101,110,116,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,99,104,105,108,100,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,114,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,34,108,111,119,101,114,99,97,115,101,79,112,101,114,97,116,111,114,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,115,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,91,32,34,114,101,108,101,118,97,110,99,121,34,32,93,10,32,32,32,32,32,32,125,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,80,114,101,112,114,111,99,101,115,115,81,117,101,114,121,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,101,112,114,111,99,101,115,115,32,113,117,101,114,121,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,49,44,10,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,97,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,108,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,99,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,100,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,109,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,112,97,114,101,110,116,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,99,104,105,108,100,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,82,97,110,103,101,34,32,58,32,53,44,10,32,32,32,32,32,32,32,32,32,32,34,101,110,97,98,108,101,68,117,112,108,105,99,97,116,101,70,105,108,116,101,114,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,50,44,10,32,32,32,32,32,32,32,32,32,32,34,113,117,101,114,121,70,117,110,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,97,110,107,105,110,103,70,117,110,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,115,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,91,32,34,114,101,108,101,118,97,110,99,121,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,97,110,107,105,110,103,69,120,112,114,101,115,115,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,97,110,107,105,110,103,79,118,101,114,114,105,100,101,115,34,32,58,32,91,32,93,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,97,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,108,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,99,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,100,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,109,113,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,112,97,114,101,110,116,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,99,104,105,108,100,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,102,105,108,116,101,114,70,105,101,108,100,82,97,110,103,101,34,32,58,32,53,44,10,32,32,32,32,32,32,32,32,32,32,34,101,110,97,98,108,101,68,117,112,108,105,99,97,116,101,70,105,108,116,101,114,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,50,44,10,32,32,32,32,32,32,32,32,32,32,34,113,117,101,114,121,70,117,110,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,97,110,107,105,110,103,70,117,110,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,115,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,91,32,34,114,101,108,101,118,97,110,99,121,34,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,97,110,107,105,110,103,69,120,112,114,101,115,115,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,97,110,107,105,110,103,79,118,101,114,114,105,100,101,115,34,32,58,32,91,32,93,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,34,99,104,105,108,100,114,101,110,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,112,112,108,121,70,105,108,116,101,114,70,101,97,116,117,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,65,112,112,108,121,32,39,102,105,108,116,101,114,39,32,114,117,108,101,115,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,97,112,112,108,105,101,100,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,112,112,108,121,82,97,110,107,105,110,103,70,101,97,116,117,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,65,112,112,108,121,32,39,114,97,110,107,105,110,103,39,32,114,117,108,101,115,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,97,112,112,108,105,101,100,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,112,112,108,121,84,111,112,82,101,115,117,108,116,70,101,97,116,117,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,65,112,112,108,121,32,39,116,111,112,39,32,114,117,108,101,115,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,97,112,112,108,105,101,100,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,112,112,108,121,82,97,110,107,105,110,103,87,101,105,103,104,116,70,101,97,116,117,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,65,112,112,108,121,32,39,114,97,110,107,105,110,103,119,101,105,103,104,116,39,32,114,117,108,101,115,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,97,112,112,108,105,101,100,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,67,97,108,108,105,110,103,82,101,118,101,97,108,84,111,112,67,108,105,99,107,115,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,67,97,108,108,105,110,103,32,39,116,111,112,67,108,105,99,107,115,39,32,114,101,118,101,97,108,32,115,101,114,118,105,99,101,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,49,49,44,10,32,32,32,32,32,32,32,32,34,99,111,110,102,105,103,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,109,111,100,101,108,34,32,58,32,34,100,101,108,108,115,97,110,100,98,111,120,95,116,111,112,99,108,105,99,107,115,95,103,101,110,101,114,97,116,101,100,95,97,52,56,56,57,48,57,53,99,51,48,101,54,55,51,53,97,57,56,51,100,99,97,98,99,100,98,99,56,50,97,49,34,44,10,32,32,32,32,32,32,32,32,32,32,34,101,110,103,105,110,101,86,101,114,115,105,111,110,34,32,58,32,34,126,50,124,126,51,34,44,10,32,32,32,32,32,32,32,32,32,32,34,109,111,100,105,102,105,101,114,34,32,58,32,50,53,48,44,10,32,32,32,32,32,32,32,32,32,32,34,109,97,116,99,104,81,117,101,114,121,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,109,97,116,99,104,65,100,118,97,110,99,101,100,81,117,101,114,121,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,34,117,115,101,82,101,102,105,110,101,100,81,117,101,114,121,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,109,97,120,82,101,115,117,108,116,115,34,32,58,32,53,44,10,32,32,32,32,32,32,32,32,32,32,34,99,97,99,104,101,77,97,120,105,109,117,109,65,103,101,34,32,58,32,34,80,84,49,48,83,34,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,98,97,115,105,99,81,117,101,114,121,75,101,121,119,111,114,100,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,108,97,114,103,101,81,117,101,114,121,75,101,121,119,111,114,100,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,117,115,101,114,73,100,34,32,58,32,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,34,44,10,32,32,32,32,32,32,32,32,34,97,99,116,105,111,110,72,105,115,116,111,114,105,101,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,117,115,101,114,67,111,110,116,101,120,116,34,32,58,32,123,32,125,44,10,32,32,32,32,32,32,32,32,34,114,101,115,112,111,110,115,101,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,114,101,118,101,97,108,34,44,10,32,32,32,32,32,32,32,32,32,32,34,112,114,101,100,105,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,114,101,102,105,110,101,100,81,117,101,114,105,101,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,100,101,98,117,103,34,32,58,32,123,34,114,101,113,117,101,115,116,73,100,34,58,110,117,108,108,44,34,114,101,115,112,111,110,115,101,73,100,34,58,34,100,99,97,50,53,57,53,100,45,57,51,53,55,45,52,52,49,53,45,98,53,54,56,45,100,52,55,101,102,53,57,53,57,51,53,54,34,44,34,109,111,100,101,108,73,110,102,111,34,58,34,123,92,34,109,111,100,101,108,73,100,92,34,58,92,34,100,101,108,108,115,97,110,100,98,111,120,95,116,111,112,99,108,105,99,107,115,95,103,101,110,101,114,97,116,101,100,95,97,52,56,56,57,48,57,53,99,51,48,101,54,55,51,53,97,57,56,51,100,99,97,98,99,100,98,99,56,50,97,49,92,34,44,92,34,109,111,100,101,108,78,97,109,101,92,34,58,92,34,103,101,110,101,114,97,116,101,100,95,97,52,56,56,57,48,57,53,99,51,48,101,54,55,51,53,97,57,56,51,100,99,97,98,99,100,98,99,56,50,97,49,92,34,44,92,34,118,101,114,115,105,111,110,92,34,58,92,34,51,46,52,50,46,54,92,34,44,92,34,101,110,118,105,114,111,110,109,101,110,116,92,34,58,92,34,112,114,100,92,34,44,92,34,111,114,103,92,34,58,92,34,100,101,108,108,115,97,110,100,98,111,120,92,34,44,92,34,109,111,100,101,108,86,101,114,115,105,111,110,92,34,58,92,34,51,46,52,50,46,49,54,51,52,53,55,54,50,49,49,92,34,44,92,34,99,114,101,97,116,101,100,68,97,116,101,92,34,58,92,34,50,48,50,49,45,49,48,45,49,56,84,49,55,58,49,53,58,52,57,46,55,51,51,90,92,34,44,92,34,109,111,100,101,108,83,105,122,101,92,34,58,92,34,49,55,56,92,34,125,34,44,34,113,117,101,114,121,80,97,114,97,109,115,34,58,34,123,92,34,110,117,109,92,34,58,53,44,92,34,100,101,98,117,103,92,34,58,116,114,117,101,44,92,34,116,114,97,99,101,76,101,118,101,108,92,34,58,49,44,92,34,99,117,115,116,111,109,80,97,114,97,109,101,116,101,114,115,92,34,58,123,125,44,92,34,117,115,101,114,67,111,110,116,101,120,116,92,34,58,123,92,34,111,114,105,103,105,110,76,101,118,101,108,51,92,34,58,92,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,92,34,125,44,92,34,97,99,116,105,111,110,115,72,105,115,116,111,114,121,92,34,58,91,93,44,92,34,117,115,101,114,73,100,92,34,58,92,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,92,34,44,92,34,118,105,115,105,116,111,114,73,100,92,34,58,92,34,55,52,57,102,97,101,99,98,45,55,52,51,50,45,52,56,54,54,45,57,57,49,98,45,98,101,49,51,99,53,101,99,99,56,57,50,92,34,44,92,34,97,110,111,110,121,109,111,117,115,92,34,58,102,97,108,115,101,44,92,34,108,97,110,103,92,34,58,92,34,101,110,92,34,44,92,34,97,110,97,108,121,116,105,99,115,67,111,110,116,101,120,116,92,34,58,123,92,34,99,108,105,101,110,116,73,100,92,34,58,92,34,55,52,57,102,97,101,99,98,45,55,52,51,50,45,52,56,54,54,45,57,57,49,98,45,98,101,49,51,99,53,101,99,99,56,57,50,92,34,44,92,34,100,111,99,117,109,101,110,116,76,111,99,97,116,105,111,110,92,34,58,92,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,35,100,101,108,108,115,97,110,100,98,111,120,47,99,111,110,116,101,110,116,47,98,114,111,119,115,101,114,47,63,99,50,57,121,100,68,49,121,90,87,120,108,100,109,70,117,89,51,107,109,90,71,86,105,100,87,99,57,77,83,90,119,97,88,66,108,98,71,108,117,90,84,49,107,90,87,90,104,100,87,120,48,92,34,44,92,34,100,111,99,117,109,101,110,116,82,101,102,101,114,114,101,114,92,34,58,92,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,92,34,44,92,34,117,115,101,114,65,103,101,110,116,92,34,58,92,34,77,111,122,105,108,108,97,47,53,46,48,32,40,87,105,110,100,111,119,115,32,78,84,32,49,48,46,48,59,32,87,105,110,54,52,59,32,120,54,52,41,32,65,112,112,108,101,87,101,98,75,105,116,47,53,51,55,46,51,54,32,40,75,72,84,77,76,44,32,108,105,107,101,32,71,101,99,107,111,41,32,67,104,114,111,109,101,47,57,52,46,48,46,52,54,48,54,46,56,49,32,83,97,102,97,114,105,47,53,51,55,46,51,54,92,34,44,92,34,117,115,101,114,73,100,92,34,58,92,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,92,34,44,92,34,117,115,101,114,73,112,92,34,58,92,34,55,52,46,49,50,46,50,49,53,46,53,51,92,34,125,44,92,34,113,92,34,58,92,34,92,34,44,92,34,102,105,108,116,101,114,115,92,34,58,123,92,34,111,114,105,103,105,110,76,101,118,101,108,49,92,34,58,92,34,65,100,109,105,110,67,111,110,115,111,108,101,92,34,125,44,92,34,119,111,114,100,83,101,108,101,99,116,105,111,110,92,34,58,92,34,92,34,44,92,34,108,113,92,34,58,92,34,92,34,44,92,34,108,113,87,101,105,103,104,116,92,34,58,48,46,55,53,44,92,34,115,101,108,101,99,116,101,100,70,97,99,101,116,115,92,34,58,91,93,125,34,44,34,117,112,100,97,116,101,100,81,117,101,114,121,80,97,114,97,109,101,116,101,114,115,34,58,34,123,92,34,110,117,109,92,34,58,53,44,92,34,100,101,98,117,103,92,34,58,116,114,117,101,44,92,34,116,114,97,99,101,76,101,118,101,108,92,34,58,49,44,92,34,99,117,115,116,111,109,80,97,114,97,109,101,116,101,114,115,92,34,58,123,125,44,92,34,117,115,101,114,67,111,110,116,101,120,116,92,34,58,123,92,34,111,114,105,103,105,110,76,101,118,101,108,51,92,34,58,92,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,92,34,125,44,92,34,97,99,116,105,111,110,115,72,105,115,116,111,114,121,92,34,58,91,93,44,92,34,117,115,101,114,73,100,92,34,58,92,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,92,34,44,92,34,118,105,115,105,116,111,114,73,100,92,34,58,92,34,55,52,57,102,97,101,99,98,45,55,52,51,50,45,52,56,54,54,45,57,57,49,98,45,98,101,49,51,99,53,101,99,99,56,57,50,92,34,44,92,34,97,110,111,110,121,109,111,117,115,92,34,58,102,97,108,115,101,44,92,34,108,97,110,103,92,34,58,92,34,101,110,92,34,44,92,34,97,110,97,108,121,116,105,99,115,67,111,110,116,101,120,116,92,34,58,123,92,34,99,108,105,101,110,116,73,100,92,34,58,92,34,55,52,57,102,97,101,99,98,45,55,52,51,50,45,52,56,54,54,45,57,57,49,98,45,98,101,49,51,99,53,101,99,99,56,57,50,92,34,44,92,34,100,111,99,117,109,101,110,116,76,111,99,97,116,105,111,110,92,34,58,92,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,35,100,101,108,108,115,97,110,100,98,111,120,47,99,111,110,116,101,110,116,47,98,114,111,119,115,101,114,47,63,99,50,57,121,100,68,49,121,90,87,120,108,100,109,70,117,89,51,107,109,90,71,86,105,100,87,99,57,77,83,90,119,97,88,66,108,98,71,108,117,90,84,49,107,90,87,90,104,100,87,120,48,92,34,44,92,34,100,111,99,117,109,101,110,116,82,101,102,101,114,114,101,114,92,34,58,92,34,104,116,116,112,115,58,47,47,112,108,97,116,102,111,114,109,46,99,108,111,117,100,46,99,111,118,101,111,46,99,111,109,47,97,100,109,105,110,47,92,34,44,92,34,117,115,101,114,65,103,101,110,116,92,34,58,92,34,77,111,122,105,108,108,97,47,53,46,48,32,40,87,105,110,100,111,119,115,32,78,84,32,49,48,46,48,59,32,87,105,110,54,52,59,32,120,54,52,41,32,65,112,112,108,101,87,101,98,75,105,116,47,53,51,55,46,51,54,32,40,75,72,84,77,76,44,32,108,105,107,101,32,71,101,99,107,111,41,32,67,104,114,111,109,101,47,57,52,46,48,46,52,54,48,54,46,56,49,32,83,97,102,97,114,105,47,53,51,55,46,51,54,92,34,44,92,34,117,115,101,114,73,100,92,34,58,92,34,106,100,101,118,111,115,116,64,99,111,118,101,111,46,99,111,109,92,34,44,92,34,117,115,101,114,73,112,92,34,58,92,34,55,52,46,49,50,46,50,49,53,46,53,51,92,34,125,44,92,34,113,92,34,58,92,34,92,34,44,92,34,102,105,108,116,101,114,115,92,34,58,123,92,34,111,114,105,103,105,110,76,101,118,101,108,49,92,34,58,92,34,65,100,109,105,110,67,111,110,115,111,108,101,92,34,125,44,92,34,119,111,114,100,83,101,108,101,99,116,105,111,110,92,34,58,92,34,92,34,44,92,34,108,113,92,34,58,92,34,92,34,44,92,34,108,113,87,101,105,103,104,116,92,34,58,48,46,55,53,44,92,34,115,101,108,101,99,116,101,100,70,97,99,101,116,115,92,34,58,91,93,125,34,44,34,101,120,101,99,117,116,105,111,110,76,111,103,34,58,91,34,67,111,110,116,101,120,116,32,107,101,121,115,32,110,111,116,32,102,111,117,110,100,58,32,111,114,105,103,105,110,76,101,118,101,108,51,34,44,34,77,97,116,99,104,101,100,32,117,115,101,114,32,99,111,110,116,101,120,116,40,115,41,32,105,110,32,109,111,100,101,108,58,32,46,34,93,125,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,69,118,97,108,117,97,116,105,110,103,84,111,112,67,108,105,99,107,115,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,69,118,97,108,117,97,116,101,32,39,116,111,112,67,108,105,99,107,115,39,32,114,101,118,101,97,108,32,114,101,115,112,111,110,115,101,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,116,111,112,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,114,101,102,105,110,101,100,81,117,101,114,105,101,115,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,80,105,112,101,108,105,110,101,82,101,115,111,108,118,101,84,114,105,103,103,101,114,115,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,82,101,115,111,108,118,101,32,116,114,105,103,103,101,114,115,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,104,105,108,100,114,101,110,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,112,112,108,121,84,114,105,103,103,101,114,70,101,97,116,117,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,65,112,112,108,121,32,39,116,114,105,103,103,101,114,39,32,114,117,108,101,115,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,97,112,112,108,105,101,100,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,73,110,100,101,120,79,112,101,114,97,116,105,111,110,86,56,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,83,101,110,100,32,113,117,101,114,121,32,116,111,32,105,110,100,101,120,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,57,56,44,10,32,32,32,32,32,32,34,114,101,115,117,108,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,66,97,115,105,99,69,120,112,114,101,115,115,105,111,110,34,32,58,32,34,64,117,114,105,34,44,10,32,32,32,32,32,32,32,32,32,32,34,65,100,118,97,110,99,101,100,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,67,111,110,115,116,97,110,116,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,68,105,115,106,117,110,99,116,105,111,110,69,120,112,114,101,115,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,70,105,114,115,116,82,101,115,117,108,116,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,50,44,10,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,66,121,34,32,58,32,34,82,101,108,101,118,97,110,99,121,34,44,10,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,66,121,70,105,101,108,100,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,67,117,115,116,111,109,70,105,108,116,101,114,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,67,117,115,116,111,109,70,105,108,116,101,114,82,97,110,103,101,34,32,58,32,53,44,10,32,32,32,32,32,32,32,32,32,32,34,69,120,99,101,114,112,116,76,101,110,103,116,104,34,32,58,32,49,48,48,44,10,32,32,32,32,32,32,32,32,32,32,34,83,117,109,109,97,114,121,76,101,110,103,116,104,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,32,32,34,84,105,109,101,90,111,110,101,79,102,102,115,101,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,69,110,97,98,108,101,87,105,108,100,99,97,114,100,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,69,110,97,98,108,101,81,117,101,115,116,105,111,110,77,97,114,107,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,69,110,97,98,108,101,68,105,100,89,111,117,77,101,97,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,34,68,105,115,97,98,108,101,76,111,103,103,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,80,97,114,101,110,116,70,105,101,108,100,78,97,109,101,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,67,104,105,108,100,70,105,101,108,100,78,97,109,101,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,69,110,97,98,108,101,68,117,112,108,105,99,97,116,101,70,105,108,116,101,114,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,69,120,116,114,97,99,116,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,34,76,111,97,100,84,97,103,115,79,110,82,101,115,117,108,116,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,34,69,110,97,98,108,101,82,97,110,107,105,110,103,73,110,102,111,114,109,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,69,110,97,98,108,101,81,117,101,114,121,80,114,111,102,105,108,105,110,103,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,84,105,109,101,90,111,110,101,34,32,58,32,34,69,117,114,111,112,101,47,65,109,115,116,101,114,100,97,109,34,44,10,32,32,32,32,32,32,32,32,32,32,34,84,105,109,101,79,117,116,34,32,58,32,49,48,44,10,32,32,32,32,32,32,32,32,32,32,34,76,97,110,103,117,97,103,101,69,120,112,97,110,115,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,83,112,101,99,105,102,105,101,100,76,97,110,103,117,97,103,101,115,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,80,114,101,102,101,114,114,101,100,76,97,110,103,117,97,103,101,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,34,69,110,97,98,108,101,77,101,116,97,116,101,114,109,83,121,110,116,97,120,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,34,82,97,110,107,105,110,103,69,120,112,114,101,115,115,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,82,97,110,107,105,110,103,70,117,110,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,81,117,101,114,121,70,117,110,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,82,97,110,107,105,110,103,79,118,101,114,114,105,100,101,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,34,70,97,99,101,116,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,108,101,116,101,70,97,99,101,116,87,105,116,104,83,116,97,110,100,97,114,100,86,97,108,117,101,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,101,108,100,78,97,109,101,34,32,58,32,34,64,115,111,117,114,99,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,71,101,110,101,114,97,116,101,65,117,116,111,109,97,116,105,99,82,97,110,103,101,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,82,97,110,103,101,65,108,103,111,114,105,116,104,109,34,32,58,32,34,69,118,101,110,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,84,121,112,101,34,32,58,32,34,86,101,114,98,97,116,105,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,106,101,99,116,105,111,110,68,101,112,116,104,34,32,58,32,49,48,48,48,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,77,97,120,78,117,109,98,101,114,79,102,70,97,99,101,116,82,101,115,117,108,116,115,34,32,58,32,54,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,117,109,98,101,114,82,97,110,103,101,70,97,99,101,116,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,112,116,105,111,110,97,108,70,105,101,108,100,86,97,108,117,101,84,111,76,111,111,107,117,112,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,67,111,110,115,116,97,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,68,105,115,106,117,110,99,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,34,83,111,114,116,66,121,79,99,99,117,114,114,101,110,99,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,104,111,114,111,117,103,104,76,111,111,107,117,112,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,85,110,105,116,79,102,77,101,97,115,117,114,101,109,101,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,108,116,101,114,70,97,99,101,116,67,111,117,110,116,34,32,58,32,34,116,114,117,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,101,110,116,105,102,121,72,105,101,114,97,114,99,104,105,99,97,108,76,101,97,118,101,115,34,32,58,32,34,102,97,108,115,101,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,108,101,116,101,70,97,99,101,116,87,105,116,104,83,116,97,110,100,97,114,100,86,97,108,117,101,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,101,108,100,78,97,109,101,34,32,58,32,34,64,111,98,106,101,99,116,116,121,112,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,71,101,110,101,114,97,116,101,65,117,116,111,109,97,116,105,99,82,97,110,103,101,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,82,97,110,103,101,65,108,103,111,114,105,116,104,109,34,32,58,32,34,69,118,101,110,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,84,121,112,101,34,32,58,32,34,86,101,114,98,97,116,105,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,106,101,99,116,105,111,110,68,101,112,116,104,34,32,58,32,49,48,48,48,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,77,97,120,78,117,109,98,101,114,79,102,70,97,99,101,116,82,101,115,117,108,116,115,34,32,58,32,54,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,117,109,98,101,114,82,97,110,103,101,70,97,99,101,116,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,112,116,105,111,110,97,108,70,105,101,108,100,86,97,108,117,101,84,111,76,111,111,107,117,112,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,67,111,110,115,116,97,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,68,105,115,106,117,110,99,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,34,83,111,114,116,66,121,79,99,99,117,114,114,101,110,99,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,104,111,114,111,117,103,104,76,111,111,107,117,112,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,85,110,105,116,79,102,77,101,97,115,117,114,101,109,101,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,108,116,101,114,70,97,99,101,116,67,111,117,110,116,34,32,58,32,34,116,114,117,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,101,110,116,105,102,121,72,105,101,114,97,114,99,104,105,99,97,108,76,101,97,118,101,115,34,32,58,32,34,102,97,108,115,101,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,108,101,116,101,70,97,99,101,116,87,105,116,104,83,116,97,110,100,97,114,100,86,97,108,117,101,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,101,108,100,78,97,109,101,34,32,58,32,34,64,102,105,108,101,116,121,112,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,71,101,110,101,114,97,116,101,65,117,116,111,109,97,116,105,99,82,97,110,103,101,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,82,97,110,103,101,65,108,103,111,114,105,116,104,109,34,32,58,32,34,69,118,101,110,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,84,121,112,101,34,32,58,32,34,86,101,114,98,97,116,105,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,106,101,99,116,105,111,110,68,101,112,116,104,34,32,58,32,49,48,48,48,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,77,97,120,78,117,109,98,101,114,79,102,70,97,99,101,116,82,101,115,117,108,116,115,34,32,58,32,54,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,117,109,98,101,114,82,97,110,103,101,70,97,99,101,116,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,112,116,105,111,110,97,108,70,105,101,108,100,86,97,108,117,101,84,111,76,111,111,107,117,112,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,67,111,110,115,116,97,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,68,105,115,106,117,110,99,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,34,83,111,114,116,66,121,79,99,99,117,114,114,101,110,99,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,104,111,114,111,117,103,104,76,111,111,107,117,112,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,85,110,105,116,79,102,77,101,97,115,117,114,101,109,101,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,108,116,101,114,70,97,99,101,116,67,111,117,110,116,34,32,58,32,34,116,114,117,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,101,110,116,105,102,121,72,105,101,114,97,114,99,104,105,99,97,108,76,101,97,118,101,115,34,32,58,32,34,102,97,108,115,101,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,108,101,116,101,70,97,99,101,116,87,105,116,104,83,116,97,110,100,97,114,100,86,97,108,117,101,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,101,108,100,78,97,109,101,34,32,58,32,34,64,97,117,116,104,111,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,71,101,110,101,114,97,116,101,65,117,116,111,109,97,116,105,99,82,97,110,103,101,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,82,97,110,103,101,65,108,103,111,114,105,116,104,109,34,32,58,32,34,69,118,101,110,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,84,121,112,101,34,32,58,32,34,86,101,114,98,97,116,105,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,106,101,99,116,105,111,110,68,101,112,116,104,34,32,58,32,49,48,48,48,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,77,97,120,78,117,109,98,101,114,79,102,70,97,99,101,116,82,101,115,117,108,116,115,34,32,58,32,54,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,117,109,98,101,114,82,97,110,103,101,70,97,99,101,116,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,112,116,105,111,110,97,108,70,105,101,108,100,86,97,108,117,101,84,111,76,111,111,107,117,112,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,67,111,110,115,116,97,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,68,105,115,106,117,110,99,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,34,83,111,114,116,66,121,79,99,99,117,114,114,101,110,99,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,104,111,114,111,117,103,104,76,111,111,107,117,112,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,85,110,105,116,79,102,77,101,97,115,117,114,101,109,101,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,108,116,101,114,70,97,99,101,116,67,111,117,110,116,34,32,58,32,34,116,114,117,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,101,110,116,105,102,121,72,105,101,114,97,114,99,104,105,99,97,108,76,101,97,118,101,115,34,32,58,32,34,102,97,108,115,101,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,108,101,116,101,70,97,99,101,116,87,105,116,104,83,116,97,110,100,97,114,100,86,97,108,117,101,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,101,108,100,78,97,109,101,34,32,58,32,34,64,121,101,97,114,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,71,101,110,101,114,97,116,101,65,117,116,111,109,97,116,105,99,82,97,110,103,101,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,82,97,110,103,101,65,108,103,111,114,105,116,104,109,34,32,58,32,34,69,118,101,110,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,84,121,112,101,34,32,58,32,34,86,101,114,98,97,116,105,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,106,101,99,116,105,111,110,68,101,112,116,104,34,32,58,32,49,48,48,48,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,77,97,120,78,117,109,98,101,114,79,102,70,97,99,101,116,82,101,115,117,108,116,115,34,32,58,32,54,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,117,109,98,101,114,82,97,110,103,101,70,97,99,101,116,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,112,116,105,111,110,97,108,70,105,101,108,100,86,97,108,117,101,84,111,76,111,111,107,117,112,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,67,111,110,115,116,97,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,68,105,115,106,117,110,99,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,34,83,111,114,116,66,121,79,99,99,117,114,114,101,110,99,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,104,111,114,111,117,103,104,76,111,111,107,117,112,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,85,110,105,116,79,102,77,101,97,115,117,114,101,109,101,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,108,116,101,114,70,97,99,101,116,67,111,117,110,116,34,32,58,32,34,116,114,117,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,101,110,116,105,102,121,72,105,101,114,97,114,99,104,105,99,97,108,76,101,97,118,101,115,34,32,58,32,34,102,97,108,115,101,34,10,32,32,32,32,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,108,101,116,101,70,97,99,101,116,87,105,116,104,83,116,97,110,100,97,114,100,86,97,108,117,101,115,34,32,58,32,116,114,117,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,101,108,100,78,97,109,101,34,32,58,32,34,64,109,111,110,116,104,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,71,101,110,101,114,97,116,101,65,117,116,111,109,97,116,105,99,82,97,110,103,101,115,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,82,97,110,103,101,65,108,103,111,114,105,116,104,109,34,32,58,32,34,69,118,101,110,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,34,32,58,32,34,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,72,105,110,116,115,84,121,112,101,34,32,58,32,34,86,101,114,98,97,116,105,109,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,110,106,101,99,116,105,111,110,68,101,112,116,104,34,32,58,32,49,48,48,48,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,77,97,120,78,117,109,98,101,114,79,102,70,97,99,101,116,82,101,115,117,108,116,115,34,32,58,32,54,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,78,117,109,98,101,114,82,97,110,103,101,70,97,99,101,116,82,101,113,117,101,115,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,112,116,105,111,110,97,108,70,105,101,108,100,86,97,108,117,101,84,111,76,111,111,107,117,112,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,67,111,110,115,116,97,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,79,118,101,114,114,105,100,105,110,103,70,105,108,116,101,114,68,105,115,106,117,110,99,116,105,111,110,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,83,111,114,116,67,114,105,116,101,114,105,97,34,32,58,32,34,83,111,114,116,66,121,79,99,99,117,114,114,101,110,99,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,84,104,111,114,111,117,103,104,76,111,111,107,117,112,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,85,110,105,116,79,102,77,101,97,115,117,114,101,109,101,110,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,70,105,108,116,101,114,70,97,99,101,116,67,111,117,110,116,34,32,58,32,34,116,114,117,101,34,44,10,32,32,32,32,32,32,32,32,32,32,32,32,34,73,100,101,110,116,105,102,121,72,105,101,114,97,114,99,104,105,99,97,108,76,101,97,118,101,115,34,32,58,32,34,102,97,108,115,101,34,10,32,32,32,32,32,32,32,32,32,32,125,32,93,10,32,32,32,32,32,32,32,32,125,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,123,10,32,32,32,32,32,32,32,32,32,32,34,105,110,100,101,120,34,32,58,32,34,100,101,108,108,115,97,110,100,98,111,120,45,118,117,51,105,50,112,102,55,98,53,52,105,114,102,110,120,107,100,116,106,97,109,50,98,55,105,45,73,110,100,101,120,101,114,45,51,45,113,107,116,111,121,116,51,52,106,121,116,106,113,122,120,108,105,53,52,117,103,120,50,100,52,109,34,44,10,32,32,32,32,32,32,32,32,32,32,34,108,111,103,69,110,116,114,121,73,100,34,32,58,32,34,50,49,50,53,48,49,53,52,50,50,56,48,51,56,51,56,57,53,34,44,10,32,32,32,32,32,32,32,32,32,32,34,115,101,114,118,101,114,84,105,109,101,34,32,58,32,55,48,44,10,32,32,32,32,32,32,32,32,32,32,34,114,101,113,117,101,115,116,84,105,109,101,34,32,58,32,57,54,44,10,32,32,32,32,32,32,32,32,32,32,34,116,111,116,97,108,67,111,117,110,116,34,32,58,32,49,53,56,55,49,48,55,57,44,10,32,32,32,32,32,32,32,32,32,32,34,116,111,116,97,108,67,111,117,110,116,70,105,108,116,101,114,101,100,34,32,58,32,49,53,56,55,49,48,55,57,44,10,32,32,32,32,32,32,32,32,32,32,34,103,114,111,117,112,66,121,67,111,117,110,116,34,32,58,32,54,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,125,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,70,97,99,101,116,82,101,115,117,108,116,80,111,115,116,80,114,111,99,101,115,115,105,110,103,69,118,97,108,117,97,116,105,111,110,82,101,112,111,114,116,34,44,10,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,111,115,116,32,112,114,111,99,101,115,115,32,116,104,101,32,114,101,115,117,108,116,32,116,104,114,111,117,103,104,32,116,104,101,32,112,114,111,99,101,115,115,111,114,115,32,112,105,112,101,108,105,110,101,34,44,10,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,34,73,110,100,101,120,32,83,99,111,114,101,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,99,104,105,108,100,114,101,110,34,32,58,32,91,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,70,97,99,101,116,83,101,110,115,101,32,77,76,32,115,99,111,114,101,32,97,115,115,105,103,110,105,110,103,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,70,97,99,101,116,83,101,110,115,101,32,77,76,32,115,99,111,114,101,32,97,115,115,105,103,110,105,110,103,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,83,101,116,116,105,110,103,32,109,111,114,101,32,118,97,108,117,101,115,32,97,118,97,105,108,97,98,108,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,83,101,116,116,105,110,103,32,109,111,114,101,32,118,97,108,117,101,115,32,97,118,97,105,108,97,98,108,101,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,112,112,108,121,32,115,101,108,101,99,116,105,111,110,32,102,114,111,109,32,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,65,112,112,108,121,32,115,101,108,101,99,116,105,111,110,32,102,114,111,109,32,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,65,100,100,105,110,103,32,111,112,116,105,111,110,97,108,32,102,97,99,101,116,32,73,68,115,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,65,100,100,105,110,103,32,111,112,116,105,111,110,97,108,32,102,97,99,101,116,32,73,68,115,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,70,114,101,101,122,105,110,103,32,102,97,99,101,116,32,118,97,108,117,101,115,32,105,102,32,97,110,121,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,70,114,101,101,122,105,110,103,32,102,97,99,101,116,32,118,97,108,117,101,115,32,105,102,32,97,110,121,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,111,114,100,101,114,105,110,103,32,118,97,108,117,101,115,32,98,97,115,101,100,32,111,110,32,102,97,99,101,116,32,115,101,110,115,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,82,101,111,114,100,101,114,105,110,103,32,118,97,108,117,101,115,32,98,97,115,101,100,32,111,110,32,102,97,99,101,116,32,115,101,110,115,101,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,116,97,105,110,105,110,103,32,115,101,108,101,99,116,101,100,32,118,97,108,117,101,115,32,98,97,115,101,100,32,111,110,32,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,82,101,116,97,105,110,105,110,103,32,115,101,108,101,99,116,101,100,32,118,97,108,117,101,115,32,98,97,115,101,100,32,111,110,32,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,111,114,100,101,114,32,102,97,99,101,116,32,114,97,110,103,101,32,118,97,108,117,101,115,32,98,97,115,101,100,32,111,110,32,115,111,114,116,32,99,114,105,116,101,114,105,97,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,82,101,111,114,100,101,114,32,102,97,99,101,116,32,114,97,110,103,101,32,118,97,108,117,101,115,32,98,97,115,101,100,32,111,110,32,115,111,114,116,32,99,114,105,116,101,114,105,97,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,111,114,100,101,114,32,102,97,99,101,116,32,118,97,108,117,101,115,32,112,117,115,104,105,110,103,32,115,101,108,101,99,116,101,100,32,118,97,108,117,101,115,32,111,110,32,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,82,101,111,114,100,101,114,32,102,97,99,101,116,32,118,97,108,117,101,115,32,112,117,115,104,105,110,103,32,115,101,108,101,99,116,101,100,32,118,97,108,117,101,115,32,111,110,32,116,111,112,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,84,114,117,110,99,97,116,101,32,101,120,116,114,97,32,118,97,108,117,101,115,32,105,110,32,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,84,114,117,110,99,97,116,101,32,101,120,116,114,97,32,118,97,108,117,101,115,32,105,110,32,114,101,113,117,101,115,116,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,111,114,100,101,114,32,102,97,99,101,116,115,32,117,115,105,110,103,32,105,110,100,101,120,32,115,99,111,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,82,101,111,114,100,101,114,32,102,97,99,101,116,115,32,117,115,105,110,103,32,105,110,100,101,120,32,115,99,111,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,32,32,34,110,97,109,101,34,32,58,32,34,82,101,111,114,100,101,114,32,102,97,99,101,116,115,32,117,115,105,110,103,32,77,76,32,115,99,111,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,80,114,111,99,101,115,115,105,110,103,32,102,97,99,101,116,32,114,101,115,117,108,116,58,32,82,101,111,114,100,101,114,32,102,97,99,101,116,115,32,117,115,105,110,103,32,77,76,32,115,99,111,114,101,34,44,10,32,32,32,32,32,32,32,32,34,100,117,114,97,116,105,111,110,34,32,58,32,48,44,10,32,32,32,32,32,32,32,32,34,99,104,97,110,103,101,100,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,32,32,32,32,34,105,110,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,32,32,34,111,117,116,34,32,58,32,91,32,93,10,32,32,32,32,32,32,125,32,93,10,32,32,32,32,125,32,93,10,32,32,125,44,10,32,32,34,105,110,100,101,120,34,32,58,32,34,100,101,108,108,115,97,110,100,98,111,120,45,118,117,51,105,50,112,102,55,98,53,52,105,114,102,110,120,107,100,116,106,97,109,50,98,55,105,45,73,110,100,101,120,101,114,45,51,45,113,107,116,111,121,116,51,52,106,121,116,106,113,122,120,108,105,53,52,117,103,120,50,100,52,109,34,44,10,32,32,34,105,110,100,101,120,82,101,103,105,111,110,34,32,58,32,34,117,115,45,101,97,115,116,45,49,34,44,10,32,32,34,105,110,100,101,120,84,111,107,101,110,34,32,58,32,34,90,71,86,115,98,72,78,104,98,109,82,105,98,51,103,116,100,110,85,122,97,84,74,119,90,106,100,105,78,84,82,112,99,109,90,117,101,71,116,107,100,71,112,104,98,84,74,105,78,50,107,116,83,87,53,107,90,88,104,108,99,105,48,122,76,88,70,114,100,71,57,53,100,68,77,48,97,110,108,48,97,110,70,54,101,71,120,112,78,84,82,49,90,51,103,121,90,68,82,116,34,44,10,32,32,34,114,101,102,105,110,101,100,75,101,121,119,111,114,100,115,34,32,58,32,91,32,93,44,10,32,32,34,116,114,105,103,103,101,114,115,34,32,58,32,91,32,93,44,10,32,32,34,116,101,114,109,115,84,111,72,105,103,104,108,105,103,104,116,34,32,58,32,123,32,125,44,10,32,32,34,112,104,114,97,115,101,115,84,111,72,105,103,104,108,105,103,104,116,34,32,58,32,123,32,125,44,10,32,32,34,113,117,101,114,121,67,111,114,114,101,99,116,105,111,110,115,34,32,58,32,91,32,93,44,10,32,32,34,103,114,111,117,112,66,121,82,101,115,117,108,116,115,34,32,58,32,91,32,123,10,32,32,32,32,34,102,105,101,108,100,34,32,58,32,34,115,111,117,114,99,101,34,44,10,32,32,32,32,34,70,105,101,108,100,34,32,58,32,34,115,111,117,114,99,101,34,44,10,32,32,32,32,34,118,97,108,117,101,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,32,77,97,110,117,97,108,115,32,80,117,98,108,105,99,32,72,116,109,108,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,77,97,110,117,97,108,115,32,80,117,98,108,105,99,32,72,116,109,108,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,53,48,48,53,53,49,51,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,77,97,110,117,97,108,115,32,80,117,98,108,105,99,32,72,116,109,108,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,77,97,110,117,97,108,115,32,80,117,98,108,105,99,32,72,116,109,108,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,53,48,48,53,53,49,51,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,77,105,108,108,105,111,110,82,101,99,111,114,100,115,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,77,105,108,108,105,111,110,82,101,99,111,114,100,115,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,48,57,55,49,53,51,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,77,105,108,108,105,111,110,82,101,99,111,114,100,115,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,77,105,108,108,105,111,110,82,101,99,111,114,100,115,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,48,57,55,49,53,51,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,32,72,84,77,76,32,77,97,110,117,97,108,32,77,117,114,116,121,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,72,84,77,76,32,77,97,110,117,97,108,32,77,117,114,116,121,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,54,55,56,56,50,55,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,72,84,77,76,32,77,97,110,117,97,108,32,77,117,114,116,121,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,72,84,77,76,32,77,97,110,117,97,108,32,77,117,114,116,121,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,54,55,56,56,50,55,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,50,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,50,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,54,49,53,54,57,53,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,50,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,50,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,54,49,53,54,57,53,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,51,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,51,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,52,50,50,55,55,50,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,51,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,51,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,52,50,50,55,55,50,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,49,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,49,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,56,51,53,50,55,56,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,49,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,45,32,72,84,77,76,32,77,97,110,117,97,108,115,32,49,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,56,51,53,50,55,56,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,32,93,44,10,32,32,32,32,34,103,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,71,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,125,44,32,123,10,32,32,32,32,34,102,105,101,108,100,34,32,58,32,34,111,98,106,101,99,116,116,121,112,101,34,44,10,32,32,32,32,34,70,105,101,108,100,34,32,58,32,34,111,98,106,101,99,116,116,121,112,101,34,44,10,32,32,32,32,34,118,97,108,117,101,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,83,79,76,85,84,73,79,78,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,83,79,76,85,84,73,79,78,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,52,49,52,55,57,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,83,79,76,85,84,73,79,78,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,83,79,76,85,84,73,79,78,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,52,49,52,55,57,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,76,105,103,104,116,110,105,110,103,95,75,110,111,119,108,101,100,103,101,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,76,105,103,104,116,110,105,110,103,95,75,110,111,119,108,101,100,103,101,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,54,57,56,51,56,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,76,105,103,104,116,110,105,110,103,95,75,110,111,119,108,101,100,103,101,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,76,105,103,104,116,110,105,110,103,95,75,110,111,119,108,101,100,103,101,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,54,57,56,51,56,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,66,114,101,97,107,95,70,105,120,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,66,114,101,97,107,95,70,105,120,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,50,49,51,50,51,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,66,114,101,97,107,95,70,105,120,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,66,114,101,97,107,95,70,105,120,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,50,49,51,50,51,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,81,78,65,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,81,78,65,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,55,57,52,50,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,81,78,65,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,81,78,65,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,55,57,52,50,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,72,111,119,95,84,111,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,72,111,119,95,84,111,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,56,52,55,54,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,72,111,119,95,84,111,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,72,111,119,95,84,111,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,56,52,55,54,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,72,79,87,84,79,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,72,79,87,84,79,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,48,53,54,52,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,72,79,87,84,79,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,72,79,87,84,79,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,48,53,54,52,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,32,93,44,10,32,32,32,32,34,103,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,71,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,125,44,32,123,10,32,32,32,32,34,102,105,101,108,100,34,32,58,32,34,102,105,108,101,116,121,112,101,34,44,10,32,32,32,32,34,70,105,101,108,100,34,32,58,32,34,102,105,108,101,116,121,112,101,34,44,10,32,32,32,32,34,118,97,108,117,101,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,51,51,54,48,48,54,51,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,51,51,54,48,48,54,51,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,116,120,116,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,116,120,116,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,48,54,50,56,52,52,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,116,120,116,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,116,120,116,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,48,54,50,56,52,52,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,83,97,108,101,115,102,111,114,99,101,73,116,101,109,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,83,97,108,101,115,102,111,114,99,101,73,116,101,109,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,49,49,56,51,51,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,83,97,108,101,115,102,111,114,99,101,73,116,101,109,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,83,97,108,101,115,102,111,114,99,101,73,116,101,109,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,49,49,56,51,51,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,55,57,53,52,51,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,55,57,53,52,51,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,49,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,49,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,55,50,55,55,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,49,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,49,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,55,50,55,55,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,73,109,97,103,101,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,73,109,97,103,101,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,53,56,56,50,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,73,109,97,103,101,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,73,109,97,103,101,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,53,56,56,50,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,32,93,44,10,32,32,32,32,34,103,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,71,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,125,44,32,123,10,32,32,32,32,34,102,105,101,108,100,34,32,58,32,34,97,117,116,104,111,114,34,44,10,32,32,32,32,34,70,105,101,108,100,34,32,58,32,34,97,117,116,104,111,114,34,44,10,32,32,32,32,34,118,97,108,117,101,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,53,55,57,48,56,53,48,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,53,55,57,48,56,53,48,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,32,73,110,99,46,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,73,110,99,46,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,49,55,50,53,57,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,73,110,99,46,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,32,73,110,99,46,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,49,55,50,53,57,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,115,101,114,118,105,99,101,32,78,85,76,76,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,115,101,114,118,105,99,101,32,78,85,76,76,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,54,57,56,50,55,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,115,101,114,118,105,99,101,32,78,85,76,76,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,115,101,114,118,105,99,101,32,78,85,76,76,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,54,57,56,50,55,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,108,108,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,57,54,54,56,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,108,108,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,108,108,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,57,54,54,56,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,68,101,102,97,117,108,116,32,65,117,116,104,111,114,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,102,97,117,108,116,32,65,117,116,104,111,114,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,50,49,56,56,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,68,101,102,97,117,108,116,32,65,117,116,104,111,114,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,68,101,102,97,117,108,116,32,65,117,116,104,111,114,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,50,49,56,56,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,69,77,67,32,67,111,114,112,111,114,97,116,105,111,110,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,69,77,67,32,67,111,114,112,111,114,97,116,105,111,110,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,51,50,48,52,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,69,77,67,32,67,111,114,112,111,114,97,116,105,111,110,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,69,77,67,32,67,111,114,112,111,114,97,116,105,111,110,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,51,50,48,52,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,32,93,44,10,32,32,32,32,34,103,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,71,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,125,44,32,123,10,32,32,32,32,34,102,105,101,108,100,34,32,58,32,34,121,101,97,114,34,44,10,32,32,32,32,34,70,105,101,108,100,34,32,58,32,34,121,101,97,114,34,44,10,32,32,32,32,34,118,97,108,117,101,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,50,48,50,49,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,50,49,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,56,57,55,49,48,57,52,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,50,48,50,49,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,50,49,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,56,57,55,49,48,57,52,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,50,48,49,57,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,57,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,53,48,52,56,56,51,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,50,48,49,57,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,57,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,50,53,48,52,56,56,51,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,50,48,50,48,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,50,48,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,53,52,55,51,48,48,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,50,48,50,48,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,50,48,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,53,52,55,51,48,48,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,50,48,49,56,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,56,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,50,53,56,56,54,48,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,50,48,49,56,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,56,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,50,53,56,56,54,48,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,50,48,49,55,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,55,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,52,56,50,48,50,55,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,50,48,49,55,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,55,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,52,56,50,48,50,55,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,50,48,49,54,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,54,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,52,51,50,56,54,57,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,50,48,49,54,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,50,48,49,54,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,52,51,50,56,54,57,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,32,93,44,10,32,32,32,32,34,103,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,71,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,125,44,32,123,10,32,32,32,32,34,102,105,101,108,100,34,32,58,32,34,109,111,110,116,104,34,44,10,32,32,32,32,34,70,105,101,108,100,34,32,58,32,34,109,111,110,116,104,34,44,10,32,32,32,32,34,118,97,108,117,101,115,34,32,58,32,91,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,49,48,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,49,48,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,53,55,48,48,51,56,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,49,48,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,49,48,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,53,55,48,48,51,56,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,48,51,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,51,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,50,55,51,56,56,52,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,48,51,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,51,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,50,55,51,56,56,52,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,48,57,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,57,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,48,51,56,49,57,53,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,48,57,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,57,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,51,48,51,56,49,57,53,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,49,49,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,49,49,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,49,51,49,56,48,48,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,49,49,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,49,49,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,49,49,51,49,56,48,48,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,48,55,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,55,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,55,56,48,54,49,56,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,48,55,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,55,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,55,56,48,54,49,56,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,44,32,123,10,32,32,32,32,32,32,34,118,97,108,117,101,34,32,58,32,34,48,53,34,44,10,32,32,32,32,32,32,34,108,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,53,34,44,10,32,32,32,32,32,32,34,110,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,55,48,55,53,48,53,44,10,32,32,32,32,32,32,34,115,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,118,97,108,117,101,84,121,112,101,34,32,58,32,34,83,116,97,110,100,97,114,100,34,44,10,32,32,32,32,32,32,34,86,97,108,117,101,34,32,58,32,34,48,53,34,44,10,32,32,32,32,32,32,34,76,111,111,107,117,112,86,97,108,117,101,34,32,58,32,34,48,53,34,44,10,32,32,32,32,32,32,34,78,117,109,98,101,114,79,102,82,101,115,117,108,116,115,34,32,58,32,55,48,55,53,48,53,44,10,32,32,32,32,32,32,34,83,99,111,114,101,34,32,58,32,48,44,10,32,32,32,32,32,32,34,99,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,32,32,34,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,32,32,125,32,93,44,10,32,32,32,32,34,103,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,71,108,111,98,97,108,67,111,109,112,117,116,101,100,70,105,101,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,10,32,32,125,32,93,44,10,32,32,34,102,97,99,101,116,115,34,32,58,32,91,32,93,44,10,32,32,34,115,117,103,103,101,115,116,101,100,70,97,99,101,116,115,34,32,58,32,91,32,93,44,10,32,32,34,99,97,116,101,103,111,114,121,70,97,99,101,116,115,34,32,58,32,91,32,93,44,10,32,32,34,114,101,115,117,108,116,115,34,32,58,32,91,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,32,46,46,46,32,65,58,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,115,101,114,118,101,114,32,117,116,105,108,105,122,97,116,105,111,110,32,97,110,100,32,97,115,115,111,99,105,97,116,101,100,32,98,105,108,108,105,110,103,32,109,101,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,32,65,58,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,115,101,114,118,101,114,32,117,116,105,108,105,122,97,116,105,111,110,32,97,110,100,32,97,115,115,111,99,105,97,116,101,100,32,98,105,108,108,105,110,103,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,55,55,50,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,57,52,46,55,50,49,52,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,32,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,69,98,102,55,84,101,107,100,104,82,195,177,67,195,177,71,72,112,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,69,98,102,55,84,101,107,100,104,82,195,177,67,195,177,71,72,112,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,115,101,114,118,101,114,115,32,59,32,66,117,115,105,110,101,115,115,32,85,110,105,116,32,59,32,117,116,105,108,105,122,97,116,105,111,110,32,59,32,116,104,114,101,115,104,111,108,100,32,59,32,98,105,108,108,105,110,103,32,59,32,105,110,116,101,114,110,97,108,32,68,101,108,108,32,59,32,101,120,116,101,114,110,97,108,32,99,117,115,116,111,109,101,114,32,59,32,109,97,105,110,116,101,110,97,110,99,101,32,116,97,115,107,115,32,59,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,59,32,98,97,114,101,32,101,115,115,101,110,116,105,97,108,115,32,59,32,112,114,111,99,101,115,115,105,110,103,32,99,97,112,97,99,105,116,121,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,115,101,114,118,101,114,115,32,59,32,66,117,115,105,110,101,115,115,32,85,110,105,116,32,59,32,117,116,105,108,105,122,97,116,105,111,110,32,59,32,116,104,114,101,115,104,111,108,100,32,59,32,98,105,108,108,105,110,103,32,59,32,105,110,116,101,114,110,97,108,32,68,101,108,108,32,59,32,101,120,116,101,114,110,97,108,32,99,117,115,116,111,109,101,114,32,59,32,109,97,105,110,116,101,110,97,110,99,101,32,116,97,115,107,115,32,59,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,59,32,98,97,114,101,32,101,115,115,101,110,116,105,97,108,115,32,59,32,112,114,111,99,101,115,115,105,110,103,32,99,97,112,97,99,105,116,121,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,113,110,97,97,110,115,119,101,114,34,32,58,32,34,60,97,32,97,114,105,97,45,108,97,98,101,108,61,92,34,80,101,114,109,97,108,105,110,107,32,102,111,114,32,81,58,32,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,92,34,32,99,108,97,115,115,61,92,34,98,95,98,95,49,51,49,48,99,57,55,51,32,99,95,98,95,49,51,49,48,99,57,55,51,92,34,32,100,97,116,97,45,105,110,116,101,114,99,101,112,116,105,111,110,61,92,34,111,102,102,92,34,32,100,97,116,97,45,115,112,45,97,110,99,104,111,114,45,105,100,61,92,34,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,92,34,32,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,92,34,32,114,111,108,101,61,92,34,108,105,110,107,92,34,32,116,97,114,103,101,116,61,92,34,95,115,101,108,102,92,34,62,60,105,32,97,114,105,97,45,104,105,100,100,101,110,61,92,34,116,114,117,101,92,34,32,99,108,97,115,115,61,92,34,101,95,98,95,49,51,49,48,99,57,55,51,32,99,115,115,45,49,48,52,92,34,62,60,47,105,62,60,47,97,62,60,112,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,32,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,115,101,114,118,101,114,32,117,116,105,108,105,122,97,116,105,111,110,32,97,110,100,32,97,115,115,111,99,105,97,116,101,100,32,98,105,108,108,105,110,103,32,109,101,116,114,105,99,32,97,114,101,32,98,97,115,101,100,32,111,110,32,97,110,32,226,128,156,97,99,116,105,118,97,116,101,100,32,110,111,100,101,32,104,111,117,114,226,128,157,46,32,85,116,105,108,105,122,97,116,105,111,110,32,105,115,32,109,101,97,115,117,114,101,100,32,97,99,114,111,115,115,32,97,108,108,32,112,114,111,99,101,115,115,111,114,115,32,105,110,32,116,104,101,32,115,101,114,118,101,114,32,99,97,108,99,117,108,97,116,101,100,32,97,115,32,97,110,32,97,118,101,114,97,103,101,32,115,101,118,101,114,97,108,32,116,105,109,101,115,32,101,97,99,104,32,104,111,117,114,32,97,110,100,32,105,102,32,116,104,101,32,97,118,101,114,97,103,101,32,117,116,105,108,105,122,97,116,105,111,110,32,101,113,117,97,108,115,32,111,114,32,101,120,99,101,101,100,115,32,53,37,32,111,102,32,105,116,115,32,116,111,116,97,108,32,112,114,111,99,101,115,115,105,110,103,32,99,97,112,97,99,105,116,121,32,97,116,32,97,110,121,32,116,105,109,101,32,100,117,114,105,110,103,32,116,104,101,32,104,111,117,114,44,32,116,104,101,32,115,101,114,118,101,114,32,40,105,46,101,46,44,32,110,111,100,101,41,32,105,115,32,99,111,110,115,105,100,101,114,101,100,32,116,111,32,98,101,32,97,99,116,105,118,97,116,101,100,46,32,84,104,101,32,53,37,32,116,104,114,101,115,104,111,108,100,32,105,115,32,98,97,115,101,100,32,111,110,32,105,110,112,117,116,32,102,114,111,109,32,116,104,101,32,83,101,114,118,101,114,32,66,117,115,105,110,101,115,115,32,85,110,105,116,32,97,115,32,116,104,101,32,109,97,120,105,109,117,109,32,67,80,85,32,117,115,97,103,101,32,114,101,113,117,105,114,101,100,32,116,111,32,114,117,110,32,116,104,101,32,226,128,156,98,97,114,101,32,101,115,115,101,110,116,105,97,108,115,226,128,157,32,115,117,99,104,32,97,115,32,116,104,101,32,111,112,101,114,97,116,105,110,103,32,115,121,115,116,101,109,32,97,110,100,32,109,97,105,110,116,101,110,97,110,99,101,32,116,97,115,107,115,32,119,105,116,104,111,117,116,32,116,114,105,103,103,101,114,105,110,103,32,97,32,98,105,108,108,105,110,103,32,101,118,101,110,116,46,32,69,120,116,101,110,115,105,118,101,32,116,101,115,116,105,110,103,32,119,97,115,32,99,111,110,100,117,99,116,101,100,32,119,105,116,104,32,116,104,101,32,104,101,108,112,32,111,102,32,116,104,101,32,83,101,114,118,101,114,32,66,117,115,105,110,101,115,115,32,85,110,105,116,32,97,110,100,32,98,97,115,101,100,32,111,110,32,116,104,111,117,115,97,110,100,115,32,111,102,32,101,120,116,101,114,110,97,108,32,99,117,115,116,111,109,101,114,32,97,110,100,32,105,110,116,101,114,110,97,108,32,68,101,108,108,32,73,84,32,115,101,114,118,101,114,115,32,116,111,32,100,101,116,101,114,109,105,110,101,32,116,104,101,32,116,104,114,101,115,104,111,108,100,32,108,101,118,101,108,46,60,47,112,62,60,100,105,118,62,60,47,100,105,118,62,34,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,97,51,99,98,53,48,100,98,97,102,102,53,54,48,53,55,57,98,53,49,50,100,57,98,100,101,49,48,50,52,48,101,97,54,48,52,98,51,57,102,50,102,49,57,102,53,53,54,99,48,51,101,101,55,49,101,101,54,98,57,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,32,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,49,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,116,121,112,101,34,32,58,32,91,32,34,81,110,65,34,32,93,44,10,32,32,32,32,32,32,34,113,110,97,116,105,116,108,101,34,32,58,32,34,32,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,55,52,56,48,55,51,48,57,55,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,53,56,57,48,50,55,50,48,52,57,57,53,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,115,111,117,114,99,101,34,32,58,32,34,81,110,65,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,55,52,56,48,55,51,48,57,55,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,104,111,119,45,105,115,45,116,104,101,45,98,105,108,108,105,110,103,45,99,97,108,99,117,108,97,116,101,100,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,32,46,46,46,32,65,58,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,115,101,114,118,101,114,32,117,116,105,108,105,122,97,116,105,111,110,32,97,110,100,32,97,115,115,111,99,105,97,116,101,100,32,98,105,108,108,105,110,103,32,109,101,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,72,111,119,32,105,115,32,116,104,101,32,98,105,108,108,105,110,103,32,99,97,108,99,117,108,97,116,101,100,63,32,65,58,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,115,101,114,118,101,114,32,117,116,105,108,105,122,97,116,105,111,110,32,97,110,100,32,97,115,115,111,99,105,97,116,101,100,32,98,105,108,108,105,110,103,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,32,46,46,46,32,73,102,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,32,65,58,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,55,55,50,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,57,52,46,55,50,49,52,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,32,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,194,160,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,49,117,78,56,113,195,177,70,118,74,99,75,90,102,53,66,195,177,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,49,117,78,56,113,195,177,70,118,74,99,75,90,102,53,66,195,177,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,99,104,97,110,110,101,108,32,59,32,112,97,114,116,110,101,114,115,32,59,32,111,112,112,111,114,116,117,110,105,116,121,32,112,114,105,111,114,32,59,32,99,117,115,116,111,109,101,114,32,104,105,115,116,111,114,105,99,97,108,108,121,32,59,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,32,59,32,82,101,112,114,101,115,101,110,116,97,116,105,118,101,32,59,32,68,101,109,97,110,100,32,59,32,70,108,101,120,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,99,104,97,110,110,101,108,32,59,32,112,97,114,116,110,101,114,115,32,59,32,111,112,112,111,114,116,117,110,105,116,121,32,112,114,105,111,114,32,59,32,99,117,115,116,111,109,101,114,32,104,105,115,116,111,114,105,99,97,108,108,121,32,59,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,32,59,32,82,101,112,114,101,115,101,110,116,97,116,105,118,101,32,59,32,68,101,109,97,110,100,32,59,32,70,108,101,120,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,113,110,97,97,110,115,119,101,114,34,32,58,32,34,60,97,32,97,114,105,97,45,108,97,98,101,108,61,92,34,80,101,114,109,97,108,105,110,107,32,102,111,114,32,81,58,32,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,194,160,92,34,32,99,108,97,115,115,61,92,34,98,95,98,95,49,51,49,48,99,57,55,51,32,99,95,98,95,49,51,49,48,99,57,55,51,92,34,32,100,97,116,97,45,105,110,116,101,114,99,101,112,116,105,111,110,61,92,34,111,102,102,92,34,32,100,97,116,97,45,115,112,45,97,110,99,104,111,114,45,105,100,61,92,34,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,44,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,92,34,32,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,67,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,92,34,32,114,111,108,101,61,92,34,108,105,110,107,92,34,32,116,97,114,103,101,116,61,92,34,95,115,101,108,102,92,34,62,60,105,32,97,114,105,97,45,104,105,100,100,101,110,61,92,34,116,114,117,101,92,34,32,99,108,97,115,115,61,92,34,101,95,98,95,49,51,49,48,99,57,55,51,32,99,115,115,45,49,48,52,92,34,62,60,47,105,62,60,47,97,62,60,112,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,32,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,89,101,115,44,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,109,101,116,97,108,45,116,105,101,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,32,40,103,111,108,100,44,32,112,108,97,116,105,110,117,109,44,32,116,105,116,97,110,105,117,109,41,46,32,73,102,32,99,117,115,116,111,109,101,114,32,104,105,115,116,111,114,105,99,97,108,108,121,32,112,117,114,99,104,97,115,101,100,32,116,104,114,111,117,103,104,32,99,104,97,110,110,101,108,44,32,98,111,116,104,32,68,70,83,32,82,101,112,114,101,115,101,110,116,97,116,105,118,101,32,97,110,100,32,68,70,83,32,67,104,97,110,110,101,108,32,83,112,101,99,105,97,108,105,115,116,32,109,117,115,116,32,99,111,111,114,100,105,110,97,116,101,32,97,110,100,32,113,117,97,108,105,102,121,32,111,112,112,111,114,116,117,110,105,116,121,32,112,114,105,111,114,32,116,111,32,112,114,105,99,105,110,103,46,32,70,111,114,32,109,111,114,101,32,105,110,102,111,114,109,97,116,105,111,110,58,32,60,97,32,100,97,116,97,45,99,107,101,45,115,97,118,101,100,45,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,53,55,55,52,54,92,34,32,100,97,116,97,45,105,110,116,101,114,99,101,112,116,105,111,110,61,92,34,111,102,102,92,34,32,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,53,55,55,52,54,92,34,32,116,97,114,103,101,116,61,92,34,95,98,108,97,110,107,92,34,32,116,105,116,108,101,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,53,55,55,52,54,92,34,62,80,97,114,116,110,101,114,32,70,108,121,101,114,60,47,97,62,44,32,60,97,32,100,97,116,97,45,99,107,101,45,115,97,118,101,100,45,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,53,55,53,49,50,92,34,32,100,97,116,97,45,105,110,116,101,114,99,101,112,116,105,111,110,61,92,34,111,102,102,92,34,32,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,53,55,53,49,50,92,34,32,116,97,114,103,101,116,61,92,34,95,98,108,97,110,107,92,34,32,116,105,116,108,101,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,53,55,53,49,50,92,34,62,80,97,114,116,110,101,114,32,83,108,105,100,101,115,60,47,97,62,44,32,97,110,100,32,60,97,32,100,97,116,97,45,99,107,101,45,115,97,118,101,100,45,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,54,56,51,50,49,92,34,32,100,97,116,97,45,105,110,116,101,114,99,101,112,116,105,111,110,61,92,34,111,102,102,92,34,32,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,54,56,51,50,49,92,34,32,116,97,114,103,101,116,61,92,34,95,98,108,97,110,107,92,34,32,116,105,116,108,101,61,92,34,104,116,116,112,115,58,47,47,105,110,115,105,100,101,46,100,101,108,108,46,99,111,109,47,100,111,99,115,47,68,79,67,45,50,54,56,51,50,49,92,34,62,80,97,114,116,110,101,114,32,70,65,81,60,47,97,62,60,47,112,62,60,100,105,118,62,60,47,100,105,118,62,34,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,53,97,102,102,57,49,53,101,55,57,54,97,55,50,49,55,54,53,54,53,55,99,54,57,52,51,55,102,52,48,98,101,101,50,54,48,48,55,100,97,52,52,49,97,100,48,55,101,51,57,48,101,56,101,50,49,49,102,52,101,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,32,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,194,160,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,51,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,116,121,112,101,34,32,58,32,91,32,34,81,110,65,34,32,93,44,10,32,32,32,32,32,32,34,113,110,97,116,105,116,108,101,34,32,58,32,34,32,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,194,160,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,54,56,50,56,52,53,57,48,53,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,53,56,57,48,50,55,51,52,57,49,54,56,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,115,111,117,114,99,101,34,32,58,32,34,81,110,65,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,54,56,50,56,52,53,57,48,53,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,105,115,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,45,97,118,97,105,108,97,98,108,101,45,102,111,114,45,99,104,97,110,110,101,108,45,112,97,114,116,110,101,114,115,37,50,99,45,97,110,100,45,119,104,97,116,45,105,115,45,116,104,101,45,112,97,114,116,110,101,114,45,112,114,105,99,105,110,103,45,112,114,111,99,101,115,115,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,32,46,46,46,32,73,102,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,73,115,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,67,104,97,110,110,101,108,32,112,97,114,116,110,101,114,115,44,32,97,110,100,32,119,104,97,116,32,105,115,32,116,104,101,32,112,97,114,116,110,101,114,32,112,114,105,99,105,110,103,32,112,114,111,99,101,115,115,63,32,65,58,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,32,46,46,46,32,65,58,32,89,101,115,44,32,105,102,32,115,111,102,116,119,97,114,101,32,114,101,113,117,105,114,101,100,32,102,111,114,32,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,32,65,58,32,89,101,115,44,32,105,102,32,115,111,102,116,119,97,114,101,32,114,101,113,117,105,114,101,100,32,102,111,114,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,55,55,50,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,57,52,46,55,50,49,52,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,32,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,77,49,83,65,112,83,74,65,119,107,117,69,99,67,78,106,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,77,49,83,65,112,83,74,65,119,107,117,69,99,67,78,106,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,104,97,114,100,119,97,114,101,32,115,111,108,117,116,105,111,110,32,59,32,101,110,97,98,108,105,110,103,32,105,110,102,114,97,115,116,114,117,99,116,117,114,101,32,59,32,67,108,111,117,100,32,84,105,101,114,32,59,32,99,97,112,97,99,105,116,121,32,99,111,110,115,105,115,116,101,110,116,32,59,32,115,105,110,103,108,101,32,99,111,109,98,105,110,101,100,32,59,32,86,80,76,69,88,32,59,32,86,105,80,82,32,59,32,82,101,99,111,118,101,114,80,111,105,110,116,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,104,97,114,100,119,97,114,101,32,115,111,108,117,116,105,111,110,32,59,32,101,110,97,98,108,105,110,103,32,105,110,102,114,97,115,116,114,117,99,116,117,114,101,32,59,32,67,108,111,117,100,32,84,105,101,114,32,59,32,99,97,112,97,99,105,116,121,32,99,111,110,115,105,115,116,101,110,116,32,59,32,115,105,110,103,108,101,32,99,111,109,98,105,110,101,100,32,59,32,86,80,76,69,88,32,59,32,86,105,80,82,32,59,32,82,101,99,111,118,101,114,80,111,105,110,116,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,113,110,97,97,110,115,119,101,114,34,32,58,32,34,60,97,32,97,114,105,97,45,108,97,98,101,108,61,92,34,80,101,114,109,97,108,105,110,107,32,102,111,114,32,81,58,32,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,92,34,32,99,108,97,115,115,61,92,34,98,95,98,95,49,51,49,48,99,57,55,51,32,99,95,98,95,49,51,49,48,99,57,55,51,92,34,32,100,97,116,97,45,105,110,116,101,114,99,101,112,116,105,111,110,61,92,34,111,102,102,92,34,32,100,97,116,97,45,115,112,45,97,110,99,104,111,114,45,105,100,61,92,34,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,92,34,32,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,92,34,32,114,111,108,101,61,92,34,108,105,110,107,92,34,32,116,97,114,103,101,116,61,92,34,95,115,101,108,102,92,34,62,60,105,32,97,114,105,97,45,104,105,100,100,101,110,61,92,34,116,114,117,101,92,34,32,99,108,97,115,115,61,92,34,101,95,98,95,49,51,49,48,99,57,55,51,32,99,115,115,45,49,48,52,92,34,62,60,47,105,62,60,47,97,62,60,112,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,60,115,112,97,110,62,32,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,60,47,115,112,97,110,62,89,101,115,44,32,105,102,32,115,111,102,116,119,97,114,101,32,114,101,113,117,105,114,101,100,32,102,111,114,32,104,97,114,100,119,97,114,101,32,115,111,108,117,116,105,111,110,32,97,110,100,32,98,117,105,108,116,32,105,110,116,111,32,72,87,47,83,87,32,113,117,111,116,101,44,32,97,32,115,105,110,103,108,101,32,99,111,109,98,105,110,101,100,32,72,87,47,83,87,32,114,97,116,101,32,105,115,32,112,114,111,118,105,100,101,100,46,32,65,108,108,32,115,111,102,116,119,97,114,101,32,109,117,115,116,32,98,101,32,113,117,111,116,101,100,32,97,116,32,97,32,99,97,112,97,99,105,116,121,32,99,111,110,115,105,115,116,101,110,116,32,119,105,116,104,32,116,104,101,32,104,97,114,100,119,97,114,101,32,115,111,108,117,116,105,111,110,46,32,83,116,97,110,100,45,97,108,111,110,101,32,115,111,102,116,119,97,114,101,32,116,105,116,108,101,115,32,226,128,147,32,68,80,83,44,32,67,108,111,117,100,32,84,105,101,114,44,32,82,101,99,111,118,101,114,80,111,105,110,116,44,32,115,111,102,116,119,97,114,101,32,97,100,100,45,111,110,115,32,40,105,46,101,46,32,86,105,80,82,41,32,97,110,100,32,101,110,97,98,108,105,110,103,32,105,110,102,114,97,115,116,114,117,99,116,117,114,101,32,40,105,46,101,46,32,86,80,76,69,88,41,32,226,128,147,32,97,114,101,32,99,111,110,115,117,109,101,100,32,105,110,100,101,112,101,110,100,101,110,116,108,121,44,32,97,110,100,32,109,117,115,116,32,115,99,97,108,101,32,119,105,116,104,32,116,104,101,32,104,97,114,100,119,97,114,101,32,116,101,99,104,110,111,108,111,103,121,46,32,67,108,111,117,100,32,84,105,101,114,32,47,32,67,108,111,117,100,80,111,111,108,115,32,47,32,83,109,97,114,116,80,111,111,108,115,32,97,110,100,32,68,80,65,32,40,68,97,116,97,32,80,114,111,116,101,99,116,105,111,110,32,38,97,109,112,59,32,65,118,97,105,108,97,98,105,108,105,116,121,41,32,115,111,102,116,119,97,114,101,32,226,128,147,32,65,109,97,122,111,110,105,116,101,44,32,67,108,111,117,100,76,105,110,107,44,32,68,97,116,97,32,68,111,109,97,105,110,32,86,105,114,116,117,97,108,32,69,100,105,116,105,111,110,32,40,68,68,86,69,41,44,32,101,67,68,65,32,226,128,147,32,97,108,115,111,32,97,108,108,111,119,101,100,32,105,102,32,98,117,105,108,116,32,105,110,116,111,32,72,87,47,83,87,32,113,117,111,116,101,44,32,98,117,116,32,110,111,32,97,100,100,105,116,105,111,110,97,108,32,99,97,112,97,99,105,116,121,32,105,115,32,97,100,100,101,100,32,102,111,114,32,112,114,105,99,105,110,103,32,99,97,108,99,117,108,97,116,105,111,110,115,44,32,97,115,32,116,104,101,115,101,32,112,114,111,100,117,99,116,115,32,97,114,101,32,111,110,108,121,32,117,115,101,100,32,102,111,114,32,109,101,116,97,100,97,116,97,32,116,114,97,110,115,102,101,114,32,116,111,47,102,114,111,109,32,99,108,111,117,100,32,97,110,100,32,110,111,116,32,102,111,114,32,115,116,111,114,97,103,101,46,32,84,104,105,114,100,32,112,97,114,116,121,32,40,110,111,110,45,68,101,108,108,32,84,101,99,104,41,32,115,111,102,116,119,97,114,101,44,32,105,110,99,108,117,100,105,110,103,32,86,77,119,97,114,101,44,32,109,117,115,116,32,98,101,32,97,99,113,117,105,114,101,100,32,115,101,112,97,114,97,116,101,32,102,114,111,109,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,46,60,47,112,62,60,100,105,118,62,60,47,100,105,118,62,34,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,55,99,100,49,48,100,53,57,56,53,52,102,99,55,55,49,52,52,51,97,102,57,55,102,100,54,99,50,102,48,54,51,50,101,53,56,52,100,56,97,57,101,99,100,99,54,101,51,57,97,98,51,56,100,55,54,97,50,101,53,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,32,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,49,56,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,116,121,112,101,34,32,58,32,91,32,34,81,110,65,34,32,93,44,10,32,32,32,32,32,32,34,113,110,97,116,105,116,108,101,34,32,58,32,34,32,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,53,48,51,55,49,49,57,52,54,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,53,56,57,48,50,55,48,50,53,49,54,54,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,115,111,117,114,99,101,34,32,58,32,34,81,110,65,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,53,48,51,55,49,49,57,52,54,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,99,97,110,45,115,111,102,116,119,97,114,101,45,98,101,45,115,116,114,117,99,116,117,114,101,100,45,119,105,116,104,45,104,97,114,100,119,97,114,101,45,105,110,45,102,108,101,120,45,111,110,45,100,101,109,97,110,100,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,32,46,46,46,32,65,58,32,89,101,115,44,32,105,102,32,115,111,102,116,119,97,114,101,32,114,101,113,117,105,114,101,100,32,102,111,114,32,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,67,97,110,32,115,111,102,116,119,97,114,101,32,98,101,32,115,116,114,117,99,116,117,114,101,100,32,119,105,116,104,32,104,97,114,100,119,97,114,101,32,105,110,32,70,108,101,120,32,111,110,32,68,101,109,97,110,100,63,32,65,58,32,89,101,115,44,32,105,102,32,115,111,102,116,119,97,114,101,32,114,101,113,117,105,114,101,100,32,102,111,114,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,32,46,46,46,32,65,58,32,80,111,119,101,114,80,114,111,116,101,99,116,32,68,68,32,47,32,68,80,32,97,110,100,32,73,68,80,65,32,97,114,101,32,115,117,112,112,111,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,32,65,58,32,80,111,119,101,114,80,114,111,116,101,99,116,32,68,68,32,47,32,68,80,32,97,110,100,32,73,68,80,65,32,97,114,101,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,55,55,50,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,57,52,46,55,50,49,52,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,32,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,68,117,195,176,77,71,53,104,85,84,119,120,75,101,119,99,121,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,68,117,195,176,77,71,53,104,85,84,119,120,75,101,119,99,121,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,48,46,55,53,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,70,79,68,32,59,32,115,101,112,97,114,97,116,101,108,121,32,112,117,114,99,104,97,115,101,100,32,59,32,98,97,99,107,117,112,32,115,111,102,116,119,97,114,101,32,59,32,80,114,111,116,101,99,116,105,111,110,32,83,117,105,116,101,32,59,32,117,116,105,108,105,122,97,116,105,111,110,32,109,101,97,115,117,114,101,109,101,110,116,32,59,32,99,117,115,116,111,109,101,114,32,59,32,68,80,65,32,59,32,78,101,116,87,111,114,107,101,114,32,59,32,80,111,119,101,114,80,114,111,116,101,99,116,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,70,79,68,32,59,32,115,101,112,97,114,97,116,101,108,121,32,112,117,114,99,104,97,115,101,100,32,59,32,98,97,99,107,117,112,32,115,111,102,116,119,97,114,101,32,59,32,80,114,111,116,101,99,116,105,111,110,32,83,117,105,116,101,32,59,32,117,116,105,108,105,122,97,116,105,111,110,32,109,101,97,115,117,114,101,109,101,110,116,32,59,32,99,117,115,116,111,109,101,114,32,59,32,68,80,65,32,59,32,78,101,116,87,111,114,107,101,114,32,59,32,80,111,119,101,114,80,114,111,116,101,99,116,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,113,110,97,97,110,115,119,101,114,34,32,58,32,34,60,97,32,97,114,105,97,45,108,97,98,101,108,61,92,34,80,101,114,109,97,108,105,110,107,32,102,111,114,32,81,58,32,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,92,34,32,99,108,97,115,115,61,92,34,98,95,98,95,49,51,49,48,99,57,55,51,32,99,95,98,95,49,51,49,48,99,57,55,51,92,34,32,100,97,116,97,45,105,110,116,101,114,99,101,112,116,105,111,110,61,92,34,111,102,102,92,34,32,100,97,116,97,45,115,112,45,97,110,99,104,111,114,45,105,100,61,92,34,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,92,34,32,104,114,101,102,61,92,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,92,34,32,114,111,108,101,61,92,34,108,105,110,107,92,34,32,116,97,114,103,101,116,61,92,34,95,115,101,108,102,92,34,62,60,105,32,97,114,105,97,45,104,105,100,100,101,110,61,92,34,116,114,117,101,92,34,32,99,108,97,115,115,61,92,34,101,95,98,95,49,51,49,48,99,57,55,51,32,99,115,115,45,49,48,52,92,34,62,60,47,105,62,60,47,97,62,60,112,62,32,80,111,119,101,114,80,114,111,116,101,99,116,32,68,68,32,47,32,68,80,32,97,110,100,32,73,68,80,65,32,97,114,101,32,115,117,112,112,111,114,116,101,100,32,119,105,116,104,32,70,79,68,32,97,110,100,32,112,114,111,118,105,100,101,32,116,104,101,32,98,97,115,105,115,32,111,102,32,99,97,112,97,99,105,116,121,32,117,116,105,108,105,122,97,116,105,111,110,32,109,101,97,115,117,114,101,109,101,110,116,46,32,65,118,97,109,97,114,44,32,78,101,116,87,111,114,107,101,114,32,97,110,100,32,68,80,65,32,40,112,97,114,116,32,111,102,32,116,104,101,32,68,97,116,97,32,80,114,111,116,101,99,116,105,111,110,32,83,117,105,116,101,41,32,97,114,101,32,116,104,101,32,115,117,112,112,111,114,116,101,100,32,98,97,99,107,117,112,32,115,111,102,116,119,97,114,101,46,32,84,104,101,115,101,32,99,97,110,32,98,101,32,97,99,113,117,105,114,101,100,32,116,104,114,111,117,103,104,32,116,104,101,32,70,79,68,32,112,114,111,103,114,97,109,44,32,111,114,32,116,104,101,32,99,117,115,116,111,109,101,114,32,99,97,110,32,117,115,101,32,115,101,112,97,114,97,116,101,108,121,32,112,117,114,99,104,97,115,101,100,32,108,105,99,101,110,115,101,115,46,32,80,114,111,68,101,112,108,111,121,32,80,108,117,115,32,97,110,100,32,80,114,111,83,117,112,112,111,114,116,32,97,114,101,32,109,105,110,105,109,117,109,32,114,101,113,117,105,114,101,109,101,110,116,115,46,60,47,112,62,60,100,105,118,62,60,47,100,105,118,62,34,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,102,97,101,56,53,52,98,56,57,54,48,100,50,100,48,100,100,97,53,98,98,50,97,100,53,97,101,53,102,52,50,99,51,49,102,49,50,51,50,48,100,48,56,101,52,55,102,49,57,56,49,54,100,50,49,98,98,100,100,55,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,57,51,51,49,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,32,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,49,55,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,116,121,112,101,34,32,58,32,91,32,34,81,110,65,34,32,93,44,10,32,32,32,32,32,32,34,113,110,97,116,105,116,108,101,34,32,58,32,34,32,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,52,57,53,57,50,54,52,51,54,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,53,56,57,48,50,55,48,48,57,49,54,48,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,51,57,52,52,49,53,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,65,112,101,120,32,67,101,110,116,114,97,108,32,45,32,70,65,81,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,55,56,53,56,50,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,115,111,117,114,99,101,34,32,58,32,34,81,110,65,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,55,56,53,56,50,55,52,57,53,57,50,54,52,51,54,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,56,57,51,56,36,104,116,116,112,115,58,47,47,100,101,108,108,46,115,104,97,114,101,112,111,105,110,116,46,99,111,109,47,115,105,116,101,115,47,97,112,101,120,99,101,110,116,114,97,108,47,115,105,116,101,112,97,103,101,115,47,102,111,100,45,102,97,113,46,97,115,112,120,35,113,45,119,104,105,99,104,45,112,114,111,100,117,99,116,115,45,100,111,101,115,45,116,104,105,115,45,115,101,114,118,105,99,101,45,111,102,102,101,114,105,110,103,45,115,117,112,112,111,114,116,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,32,46,46,46,32,65,58,32,80,111,119,101,114,80,114,111,116,101,99,116,32,68,68,32,47,32,68,80,32,97,110,100,32,73,68,80,65,32,97,114,101,32,115,117,112,112,111,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,87,104,105,99,104,32,112,114,111,100,117,99,116,115,32,100,111,101,115,32,116,104,105,115,32,115,101,114,118,105,99,101,32,111,102,102,101,114,105,110,103,32,115,117,112,112,111,114,116,63,32,65,58,32,80,111,119,101,114,80,114,111,116,101,99,116,32,68,68,32,47,32,68,80,32,97,110,100,32,73,68,80,65,32,97,114,101,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,49,54,48,49,50,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,46,46,46,32,73,100,101,110,116,105,102,121,32,121,111,117,114,32,112,114,111,100,117,99,116,32,116,111,32,115,101,101,32,121,111,117,114,32,119,97,114,114,97,110,116,121,32,115,116,97,116,117,115,32,97,110,100,32,99,111,118,101,114,97,103,101,32,111,112,116,105,111,110,115,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,32,67,97,114,116,32,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,34,44,10,32,32,32,32,32,32,34,115,121,115,97,117,116,104,111,114,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,72,119,73,105,72,98,68,105,116,195,176,119,122,57,108,120,99,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,101,110,45,97,110,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,72,119,73,105,72,98,68,105,116,195,176,119,122,57,108,120,99,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,51,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,119,97,114,114,97,110,116,121,32,59,32,99,111,118,101,114,97,103,101,32,59,32,99,111,110,116,114,97,99,116,32,59,32,68,101,108,108,32,69,77,67,32,59,32,69,110,116,101,114,112,114,105,115,101,32,97,115,115,101,116,32,59,32,83,101,97,114,99,104,32,115,117,112,112,111,114,116,32,59,32,66,114,111,119,115,101,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,103,101,111,34,32,58,32,91,32,34,97,110,34,32,93,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,119,97,114,114,97,110,116,121,32,59,32,99,111,118,101,114,97,103,101,32,59,32,99,111,110,116,114,97,99,116,32,59,32,68,101,108,108,32,69,77,67,32,59,32,69,110,116,101,114,112,114,105,115,101,32,97,115,115,101,116,32,59,32,83,101,97,114,99,104,32,115,117,112,112,111,114,116,32,59,32,66,114,111,119,115,101,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,54,55,50,48,48,48,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,101,48,98,54,56,98,51,55,49,97,98,101,56,53,52,56,50,98,49,99,102,52,55,54,101,48,98,98,56,57,97,101,53,48,56,102,54,55,52,99,57,52,53,102,51,54,57,55,55,48,97,51,48,97,97,55,50,53,100,54,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,51,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,52,49,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,101,110,45,97,110,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,116,121,112,101,34,32,58,32,91,32,34,83,117,112,112,111,114,116,32,76,105,98,114,97,114,121,34,32,93,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,54,54,55,56,56,49,53,56,50,49,56,52,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,52,55,49,56,48,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,101,110,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,32,82,101,115,116,32,69,115,117,112,112,111,114,116,32,65,112,112,108,105,99,97,116,105,111,110,115,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,56,56,48,53,57,51,53,51,57,48,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,52,55,49,56,48,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,105,117,120,116,121,112,101,34,32,58,32,91,32,34,83,117,112,112,111,114,116,32,98,121,32,84,111,112,105,99,34,32,93,44,10,32,32,32,32,32,32,34,97,117,116,104,111,114,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,32,82,101,115,116,32,69,115,117,112,112,111,114,116,32,65,112,112,108,105,99,97,116,105,111,110,115,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,54,55,50,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,54,54,55,56,56,49,53,56,50,49,56,52,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,69,110,116,101,114,32,121,111,117,114,32,83,101,114,118,105,99,101,32,84,97,103,44,32,101,120,112,114,101,115,115,32,115,101,114,118,105,99,101,32,99,111,100,101,32,111,114,32,69,77,67,32,112,114,111,100,117,99,116,32,73,68,32,116,111,32,99,104,101,99,107,32,111,110,32,121,111,117,114,32,119,97,114,114,97,110,116,121,32,115,116,97,116,117,115,44,32,97,100,100,105,116,105,111,110,97,108,32,99,111,118,101,114,97,103,101,32,111,112,116,105,111,110,115,32,115,117,99,104,32,97,115,32,97,99,99,105,100,101,110,116,97,108,32,100,97,109,97,103,101,32,111,114,32,99,111,109,112,108,101,116,101,32,99,97,114,101,32,97,110,100,32,108,101,97,114,110,32,97,98,111,117,116,32,121,111,117,114,32,68,101,108,108,32,119,97,114,114,97,110,116,121,46,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,49,54,48,49,50,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,110,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,46,46,46,32,73,100,101,110,116,105,102,121,32,121,111,117,114,32,112,114,111,100,117,99,116,32,116,111,32,115,101,101,32,121,111,117,114,32,119,97,114,114,97,110,116,121,32,115,116,97,116,117,115,32,97,110,100,32,99,111,118,101,114,97,103,101,32,111,112,116,105,111,110,115,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,32,67,97,114,116,32,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,49,54,48,49,50,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,46,46,46,32,73,100,101,110,116,105,102,121,32,121,111,117,114,32,112,114,111,100,117,99,116,32,116,111,32,115,101,101,32,121,111,117,114,32,119,97,114,114,97,110,116,121,32,115,116,97,116,117,115,32,97,110,100,32,99,111,118,101,114,97,103,101,32,111,112,116,105,111,110,115,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,32,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,32,80,114,111,100,117,99,116,115,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,34,44,10,32,32,32,32,32,32,34,115,121,115,97,117,116,104,111,114,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,74,77,195,176,69,120,74,101,82,119,108,106,51,56,100,108,88,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,101,110,45,97,101,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,74,77,195,176,69,120,74,101,82,119,108,106,51,56,100,108,88,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,51,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,119,97,114,114,97,110,116,121,32,59,32,99,111,118,101,114,97,103,101,32,59,32,99,111,110,116,114,97,99,116,32,59,32,68,101,108,108,32,69,77,67,32,59,32,69,110,116,101,114,112,114,105,115,101,32,97,115,115,101,116,32,59,32,83,101,97,114,99,104,32,115,117,112,112,111,114,116,32,59,32,66,114,111,119,115,101,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,103,101,111,34,32,58,32,91,32,34,97,101,34,32,93,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,119,97,114,114,97,110,116,121,32,59,32,99,111,118,101,114,97,103,101,32,59,32,99,111,110,116,114,97,99,116,32,59,32,68,101,108,108,32,69,77,67,32,59,32,69,110,116,101,114,112,114,105,115,101,32,97,115,115,101,116,32,59,32,83,101,97,114,99,104,32,115,117,112,112,111,114,116,32,59,32,66,114,111,119,115,101,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,54,54,55,48,48,48,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,99,100,52,54,53,52,99,101,55,100,99,56,50,102,100,56,98,99,101,49,53,52,101,51,102,97,100,102,101,99,98,53,51,54,53,56,52,98,98,97,52,102,57,56,48,55,101,51,54,99,100,98,101,102,52,49,102,102,101,57,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,51,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,48,48,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,101,110,45,97,101,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,116,121,112,101,34,32,58,32,91,32,34,83,117,112,112,111,114,116,32,76,105,98,114,97,114,121,34,32,93,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,54,54,55,54,48,56,51,54,50,50,51,49,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,52,52,57,49,53,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,101,110,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,32,82,101,115,116,32,69,115,117,112,112,111,114,116,32,65,112,112,108,105,99,97,116,105,111,110,115,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,56,56,48,53,53,53,54,51,56,53,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,52,52,57,49,53,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,105,117,120,116,121,112,101,34,32,58,32,91,32,34,83,117,112,112,111,114,116,32,98,121,32,84,111,112,105,99,34,32,93,44,10,32,32,32,32,32,32,34,97,117,116,104,111,114,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,32,82,101,115,116,32,69,115,117,112,112,111,114,116,32,65,112,112,108,105,99,97,116,105,111,110,115,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,54,54,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,54,54,55,54,48,56,51,54,50,50,51,49,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,69,110,116,101,114,32,121,111,117,114,32,83,101,114,118,105,99,101,32,84,97,103,44,32,101,120,112,114,101,115,115,32,115,101,114,118,105,99,101,32,99,111,100,101,32,111,114,32,69,77,67,32,112,114,111,100,117,99,116,32,73,68,32,116,111,32,99,104,101,99,107,32,111,110,32,121,111,117,114,32,119,97,114,114,97,110,116,121,32,115,116,97,116,117,115,44,32,97,100,100,105,116,105,111,110,97,108,32,99,111,118,101,114,97,103,101,32,111,112,116,105,111,110,115,32,115,117,99,104,32,97,115,32,97,99,99,105,100,101,110,116,97,108,32,100,97,109,97,103,101,32,111,114,32,99,111,109,112,108,101,116,101,32,99,97,114,101,32,97,110,100,32,108,101,97,114,110,32,97,98,111,117,116,32,121,111,117,114,32,68,101,108,108,32,119,97,114,114,97,110,116,121,46,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,49,54,48,49,50,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,104,111,109,101,47,101,110,45,97,101,63,97,112,112,61,119,97,114,114,97,110,116,121,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,87,97,114,114,97,110,116,121,32,38,32,67,111,110,116,114,97,99,116,115,32,46,46,46,32,73,100,101,110,116,105,102,121,32,121,111,117,114,32,112,114,111,100,117,99,116,32,116,111,32,115,101,101,32,121,111,117,114,32,119,97,114,114,97,110,116,121,32,115,116,97,116,117,115,32,97,110,100,32,99,111,118,101,114,97,103,101,32,111,112,116,105,111,110,115,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,32,83,117,112,112,111,114,116,32,68,101,108,108,46,99,111,109,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,46,99,111,109,32,83,101,97,114,99,104,32,80,114,111,100,117,99,116,115,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,49,54,48,49,50,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,84,104,101,32,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,97,108,108,111,119,115,32,121,111,117,32,116,111,32,118,105,101,119,32,97,110,100,32,109,97,110,97,103,101,32,121,111,117,114,32,112,114,111,100,117,99,116,115,44,32,115,111,102,116,119,97,114,101,44,32,115,117,98,115,99,114,105,112,116,105,111,110,115,44,32,97,110,100,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,84,104,101,32,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,97,108,108,111,119,115,32,121,111,117,32,116,111,32,118,105,101,119,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,34,44,10,32,32,32,32,32,32,34,101,110,100,115,119,105,116,104,115,108,97,115,104,34,32,58,32,34,116,114,117,101,34,44,10,32,32,32,32,32,32,34,115,121,115,97,117,116,104,111,114,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,113,76,114,113,51,53,54,55,107,195,176,52,70,54,57,106,79,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,113,76,114,113,51,53,54,55,107,195,176,52,70,54,57,106,79,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,51,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,68,101,108,108,32,65,99,99,111,117,110,116,32,59,32,115,117,98,115,99,114,105,112,116,105,111,110,115,32,59,32,86,105,101,119,32,59,32,108,105,99,101,110,115,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,32,59,32,101,110,116,105,116,108,101,109,101,110,116,115,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,103,101,111,34,32,58,32,91,32,34,97,105,34,32,93,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,68,101,108,108,32,65,99,99,111,117,110,116,32,59,32,115,117,98,115,99,114,105,112,116,105,111,110,115,32,59,32,86,105,101,119,32,59,32,108,105,99,101,110,115,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,32,59,32,101,110,116,105,116,108,101,109,101,110,116,115,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,54,54,55,48,48,48,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,99,97,49,54,54,49,100,51,98,50,56,97,100,99,52,102,56,51,52,53,49,52,98,98,100,99,52,49,52,98,102,100,52,55,52,55,50,100,51,51,101,49,101,55,48,97,54,101,102,56,48,54,50,55,49,52,98,57,48,49,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,51,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,49,52,48,48,48,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,116,121,112,101,34,32,58,32,91,32,34,83,117,112,112,111,114,116,32,76,105,98,114,97,114,121,34,32,93,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,54,54,55,55,54,49,57,57,51,49,53,54,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,49,48,51,57,49,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,101,110,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,32,82,101,115,116,32,69,115,117,112,112,111,114,116,32,65,112,112,108,105,99,97,116,105,111,110,115,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,56,56,48,53,57,50,54,51,56,54,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,49,48,51,57,49,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,105,117,120,116,121,112,101,34,32,58,32,91,32,34,83,117,112,112,111,114,116,32,98,121,32,84,111,112,105,99,34,32,93,44,10,32,32,32,32,32,32,34,97,117,116,104,111,114,34,32,58,32,34,68,101,108,108,32,85,83,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,32,82,101,115,116,32,69,115,117,112,112,111,114,116,32,65,112,112,108,105,99,97,116,105,111,110,115,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,54,54,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,54,54,55,55,54,49,57,57,51,49,53,54,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,99,111,109,109,111,110,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,84,104,101,32,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,97,108,108,111,119,115,32,121,111,117,32,116,111,32,118,105,101,119,32,97,110,100,32,109,97,110,97,103,101,32,121,111,117,114,32,112,114,111,100,117,99,116,115,44,32,115,111,102,116,119,97,114,101,44,32,97,110,100,32,108,105,99,101,110,115,105,110,103,32,105,110,102,111,114,109,97,116,105,111,110,32,105,110,32,111,110,101,32,108,111,99,97,116,105,111,110,46,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,49,54,48,49,50,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,115,117,112,112,111,114,116,47,115,111,102,116,119,97,114,101,47,97,105,47,101,110,47,97,105,98,115,100,116,49,47,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,84,104,101,32,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,97,108,108,111,119,115,32,121,111,117,32,116,111,32,118,105,101,119,32,97,110,100,32,109,97,110,97,103,101,32,121,111,117,114,32,112,114,111,100,117,99,116,115,44,32,115,111,102,116,119,97,114,101,44,32,115,117,98,115,99,114,105,112,116,105,111,110,115,44,32,97,110,100,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,84,104,101,32,68,101,108,108,32,68,105,103,105,116,97,108,32,76,111,99,107,101,114,32,97,108,108,111,119,115,32,121,111,117,32,116,111,32,118,105,101,119,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,50,49,56,51,52,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,69,110,106,111,121,32,109,101,109,98,101,114,115,45,111,110,108,121,32,114,101,119,97,114,100,115,32,97,110,100,32,100,105,115,99,111,117,110,116,115,32,46,46,46,32,87,101,226,128,153,114,101,32,115,111,114,114,121,32,116,104,97,116,32,116,104,105,115,32,112,114,111,100,117,99,116,32,105,115,110,226,128,153,116,32,99,117,114,114,101,110,116,108,121,32,97,118,97,105,108,97,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,107,105,112,32,116,111,32,109,97,105,110,32,99,111,110,116,101,110,116,32,83,101,97,114,99,104,32,67,97,110,99,101,108,32,67,97,114,116,32,89,111,117,114,32,68,101,108,108,46,99,111,109,32,67,97,114,116,115,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,77,121,32,65,99,99,111,117,110,116,32,80,108,97,99,101,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,120,99,67,49,85,56,195,177,108,81,68,67,113,113,98,51,122,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,120,99,67,49,85,56,195,177,108,81,68,67,113,113,98,51,122,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,50,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,114,101,119,97,114,100,115,32,59,32,68,101,108,108,32,69,77,67,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,115,101,114,118,101,114,115,32,59,32,109,101,109,111,114,121,32,59,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,59,32,109,111,100,101,114,110,32,119,111,114,107,108,111,97,100,115,32,59,32,115,99,97,108,97,98,108,101,32,115,105,110,103,108,101,45,115,111,99,107,101,116,32,59,32,109,97,110,97,103,101,109,101,110,116,32,59,32,99,111,110,102,105,103,117,114,97,116,105,111,110,32,59,32,100,101,112,108,111,121,109,101,110,116,115,32,59,32,99,111,110,115,117,108,116,97,110,116,115,32,59,32,116,101,99,104,110,111,108,111,103,121,32,59,32,97,115,115,105,115,116,97,110,99,101,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,114,101,119,97,114,100,115,32,59,32,68,101,108,108,32,69,77,67,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,115,101,114,118,101,114,115,32,59,32,109,101,109,111,114,121,32,59,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,59,32,109,111,100,101,114,110,32,119,111,114,107,108,111,97,100,115,32,59,32,115,99,97,108,97,98,108,101,32,115,105,110,103,108,101,45,115,111,99,107,101,116,32,59,32,109,97,110,97,103,101,109,101,110,116,32,59,32,99,111,110,102,105,103,117,114,97,116,105,111,110,32,59,32,100,101,112,108,111,121,109,101,110,116,115,32,59,32,99,111,110,115,117,108,116,97,110,116,115,32,59,32,116,101,99,104,110,111,108,111,103,121,32,59,32,97,115,115,105,115,116,97,110,99,101,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,51,55,48,48,48,44,10,32,32,32,32,32,32,34,115,112,101,99,105,102,105,99,97,116,105,111,110,115,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,114,111,100,117,99,116,100,101,116,97,105,108,115,116,120,110,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,35,116,101,99,104,115,112,101,99,115,34,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,102,100,49,101,99,54,97,49,100,50,55,55,56,97,100,49,98,54,102,97,53,55,55,52,52,100,53,49,55,52,49,97,56,97,100,99,56,51,57,55,101,98,100,56,100,51,51,97,52,48,50,50,49,57,51,99,54,102,57,101,34,44,10,32,32,32,32,32,32,34,100,101,108,108,101,109,99,112,114,111,100,117,99,116,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,86,105,101,119,32,116,104,101,32,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,82,97,99,107,32,83,101,114,118,101,114,32,97,110,100,32,115,104,111,112,32,97,108,108,32,111,102,32,111,117,114,32,83,101,114,118,101,114,115,32,97,116,32,68,101,108,108,46,99,111,109,46,32,83,99,97,108,101,45,117,112,32,101,102,102,105,99,105,101,110,99,121,32,119,105,116,104,111,117,116,32,99,111,109,112,114,111,109,105,115,101,46,32,84,104,101,32,98,101,100,114,111,99,107,32,111,102,32,116,104,101,32,100,97,116,97,32,99,101,110,116,101,114,46,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,50,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,50,51,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,51,55,49,50,54,53,49,57,49,54,52,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,50,50,56,54,49,51,44,10,32,32,32,32,32,32,34,108,101,97,114,110,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,114,111,100,117,99,116,100,101,116,97,105,108,115,116,120,110,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,35,102,101,97,116,117,114,101,115,34,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,101,118,101,114,121,116,104,105,110,103,111,110,112,97,103,101,34,32,58,32,34,85,110,105,116,101,100,32,83,116,97,116,101,115,32,70,111,114,32,66,117,115,105,110,101,115,115,32,83,101,114,118,101,114,115,44,32,83,116,111,114,97,103,101,32,38,97,109,112,59,32,78,101,116,119,111,114,107,105,110,103,32,83,101,114,118,101,114,115,32,80,111,119,101,114,69,100,103,101,32,82,97,99,107,32,83,101,114,118,101,114,115,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,83,104,111,112,32,83,101,114,118,101,114,115,32,65,77,68,194,174,32,80,114,111,99,101,115,115,111,114,115,32,67,111,109,112,97,114,101,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,69,77,67,83,101,114,118,101,114,115,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,56,54,50,57,57,49,57,56,57,50,44,10,32,32,32,32,32,32,34,112,114,105,99,105,110,103,34,32,58,32,34,36,34,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,50,50,56,54,49,51,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,69,77,67,83,101,114,118,101,114,115,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,99,111,109,112,97,114,101,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,51,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,51,55,49,50,54,53,49,57,49,54,52,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,52,49,53,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,50,49,56,51,52,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,52,49,53,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,69,110,106,111,121,32,109,101,109,98,101,114,115,45,111,110,108,121,32,114,101,119,97,114,100,115,32,97,110,100,32,100,105,115,99,111,117,110,116,115,32,46,46,46,32,87,101,226,128,153,114,101,32,115,111,114,114,121,32,116,104,97,116,32,116,104,105,115,32,112,114,111,100,117,99,116,32,105,115,110,226,128,153,116,32,99,117,114,114,101,110,116,108,121,32,97,118,97,105,108,97,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,107,105,112,32,116,111,32,109,97,105,110,32,99,111,110,116,101,110,116,32,83,101,97,114,99,104,32,67,97,110,99,101,108,32,67,97,114,116,32,89,111,117,114,32,68,101,108,108,46,99,111,109,32,67,97,114,116,115,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,77,121,32,65,99,99,111,117,110,116,32,80,108,97,99,101,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,51,48,120,100,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,50,49,56,51,52,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,69,110,106,111,121,32,109,101,109,98,101,114,115,45,111,110,108,121,32,114,101,119,97,114,100,115,32,97,110,100,32,100,105,115,99,111,117,110,116,115,32,46,46,46,32,83,111,114,114,121,44,32,116,104,105,115,32,105,116,101,109,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,97,110,121,109,111,114,101,32,102,111,114,32,112,117,114,99,104,97,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,107,105,112,32,116,111,32,109,97,105,110,32,99,111,110,116,101,110,116,32,83,101,97,114,99,104,32,67,97,110,99,101,108,32,67,97,114,116,32,89,111,117,114,32,68,101,108,108,46,99,111,109,32,67,97,114,116,115,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,77,121,32,65,99,99,111,117,110,116,32,80,108,97,99,101,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,51,48,120,100,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,70,56,73,82,88,87,70,85,51,87,86,97,79,105,82,52,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,70,56,73,82,88,87,70,85,51,87,86,97,79,105,82,52,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,50,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,115,121,115,116,101,109,115,32,109,97,110,97,103,101,109,101,110,116,32,59,32,80,111,119,101,114,69,100,103,101,32,115,101,114,118,101,114,115,32,59,32,115,116,111,114,97,103,101,32,59,32,76,105,102,101,99,121,99,108,101,32,67,111,110,116,114,111,108,108,101,114,32,59,32,110,101,116,119,111,114,107,105,110,103,32,115,111,108,117,116,105,111,110,115,32,59,32,116,101,99,104,110,111,108,111,103,105,101,115,32,59,32,115,117,112,112,111,114,116,115,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,118,105,114,116,117,97,108,32,101,110,118,105,114,111,110,109,101,110,116,115,32,59,32,102,108,101,120,105,98,108,121,32,108,101,118,101,114,97,103,101,32,59,32,99,111,110,102,105,103,117,114,97,116,105,111,110,115,32,59,32,105,110,116,101,103,114,97,116,105,111,110,115,32,59,32,97,100,109,105,110,105,115,116,114,97,116,105,111,110,32,59,32,104,105,103,104,45,112,101,114,102,111,114,109,97,110,99,101,32,59,32,114,101,115,112,111,110,115,105,118,101,110,101,115,115,32,59,32,100,101,108,108,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,115,121,115,116,101,109,115,32,109,97,110,97,103,101,109,101,110,116,32,59,32,80,111,119,101,114,69,100,103,101,32,115,101,114,118,101,114,115,32,59,32,115,116,111,114,97,103,101,32,59,32,76,105,102,101,99,121,99,108,101,32,67,111,110,116,114,111,108,108,101,114,32,59,32,110,101,116,119,111,114,107,105,110,103,32,115,111,108,117,116,105,111,110,115,32,59,32,116,101,99,104,110,111,108,111,103,105,101,115,32,59,32,115,117,112,112,111,114,116,115,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,118,105,114,116,117,97,108,32,101,110,118,105,114,111,110,109,101,110,116,115,32,59,32,102,108,101,120,105,98,108,121,32,108,101,118,101,114,97,103,101,32,59,32,99,111,110,102,105,103,117,114,97,116,105,111,110,115,32,59,32,105,110,116,101,103,114,97,116,105,111,110,115,32,59,32,97,100,109,105,110,105,115,116,114,97,116,105,111,110,32,59,32,104,105,103,104,45,112,101,114,102,111,114,109,97,110,99,101,32,59,32,114,101,115,112,111,110,115,105,118,101,110,101,115,115,32,59,32,100,101,108,108,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,51,53,48,48,48,44,10,32,32,32,32,32,32,34,115,112,101,99,105,102,105,99,97,116,105,111,110,115,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,35,116,101,99,104,115,112,101,99,115,34,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,101,97,57,50,48,49,48,50,56,97,55,98,50,57,57,55,97,51,57,102,53,97,56,99,50,52,56,99,54,100,97,99,54,52,50,52,57,52,55,98,55,48,97,99,99,101,54,49,52,98,101,48,53,99,52,100,55,55,99,50,34,44,10,32,32,32,32,32,32,34,100,101,108,108,101,109,99,112,114,111,100,117,99,116,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,86,105,101,119,32,116,104,101,32,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,51,48,120,100,32,82,97,99,107,32,83,101,114,118,101,114,32,97,110,100,32,115,104,111,112,32,97,108,108,32,111,102,32,111,117,114,32,83,101,114,118,101,114,115,32,97,116,32,68,101,108,108,46,99,111,109,46,32,82,101,100,101,102,105,110,105,110,103,32,115,101,114,118,101,114,45,98,97,115,101,100,32,115,116,111,114,97,103,101,32,102,108,101,120,105,98,105,108,105,116,121,46,32,84,104,101,32,98,101,100,114,111,99,107,32,111,102,32,116,104,101,32,100,97,116,97,32,99,101,110,116,101,114,46,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,50,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,51,48,120,100,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,50,54,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,51,53,51,52,56,50,53,53,49,50,53,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,50,50,48,48,53,48,44,10,32,32,32,32,32,32,34,108,101,97,114,110,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,35,102,101,97,116,117,114,101,115,34,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,101,118,101,114,121,116,104,105,110,103,111,110,112,97,103,101,34,32,58,32,34,85,110,105,116,101,100,32,83,116,97,116,101,115,32,70,111,114,32,87,111,114,107,32,83,101,114,118,101,114,115,44,32,83,116,111,114,97,103,101,32,38,97,109,112,59,32,78,101,116,119,111,114,107,105,110,103,32,83,101,114,118,101,114,115,32,80,111,119,101,114,69,100,103,101,32,82,97,99,107,32,83,101,114,118,101,114,115,32,80,111,119,101,114,69,100,103,101,32,82,55,51,48,120,100,32,83,104,111,112,32,83,101,114,118,101,114,115,32,73,110,116,101,108,194,174,32,88,101,111,110,194,174,32,83,99,97,108,97,98,108,101,32,80,114,111,99,101,115,115,111,114,115,32,67,111,109,112,97,114,101,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,69,77,67,83,101,114,118,101,114,115,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,56,54,51,48,49,53,50,56,55,48,44,10,32,32,32,32,32,32,34,112,114,105,99,105,110,103,34,32,58,32,34,36,34,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,50,50,48,48,53,48,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,69,77,67,83,101,114,118,101,114,115,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,99,111,109,112,97,114,101,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,51,53,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,51,53,51,52,56,50,53,53,49,50,53,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,68,101,108,108,32,80,111,119,101,114,69,100,103,101,32,82,55,51,48,120,100,32,82,97,99,107,32,83,101,114,118,101,114,32,58,32,83,101,114,118,101,114,115,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,50,49,56,51,52,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,112,111,119,101,114,101,100,103,101,45,114,55,51,48,120,100,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,69,110,106,111,121,32,109,101,109,98,101,114,115,45,111,110,108,121,32,114,101,119,97,114,100,115,32,97,110,100,32,100,105,115,99,111,117,110,116,115,32,46,46,46,32,83,111,114,114,121,44,32,116,104,105,115,32,105,116,101,109,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,97,110,121,109,111,114,101,32,102,111,114,32,112,117,114,99,104,97,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,107,105,112,32,116,111,32,109,97,105,110,32,99,111,110,116,101,110,116,32,83,101,97,114,99,104,32,67,97,110,99,101,108,32,67,97,114,116,32,89,111,117,114,32,68,101,108,108,46,99,111,109,32,67,97,114,116,115,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,77,121,32,65,99,99,111,117,110,116,32,80,108,97,99,101,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,70,76,69,88,32,58,32,83,121,115,116,101,109,115,32,77,97,110,97,103,101,109,101,110,116,32,83,111,102,116,119,97,114,101,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,50,49,56,51,52,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,69,110,106,111,121,32,109,101,109,98,101,114,115,45,111,110,108,121,32,114,101,119,97,114,100,115,32,97,110,100,32,100,105,115,99,111,117,110,116,115,32,46,46,46,32,83,111,114,114,121,44,32,116,104,105,115,32,105,116,101,109,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,97,110,121,109,111,114,101,32,102,111,114,32,112,117,114,99,104,97,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,107,105,112,32,116,111,32,109,97,105,110,32,99,111,110,116,101,110,116,32,83,101,97,114,99,104,32,67,97,110,99,101,108,32,67,97,114,116,32,89,111,117,114,32,68,101,108,108,46,99,111,109,32,67,97,114,116,115,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,77,121,32,65,99,99,111,117,110,116,32,80,108,97,99,101,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,70,76,69,88,32,58,32,83,121,115,116,101,109,115,32,77,97,110,97,103,101,109,101,110,116,32,83,111,102,116,119,97,114,101,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,72,79,67,100,52,103,77,98,112,101,76,70,110,49,85,102,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,110,97,109,101,34,32,58,32,34,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,72,79,67,100,52,103,77,98,112,101,76,70,110,49,85,102,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,115,121,115,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,50,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,114,101,119,97,114,100,115,32,59,32,100,101,108,108,32,59,32,118,105,114,116,117,97,108,32,100,101,115,107,116,111,112,115,32,59,32,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,69,110,116,101,114,112,114,105,115,101,32,83,117,105,116,101,32,59,32,109,97,105,110,116,97,105,110,105,110,103,32,115,101,99,117,114,105,116,121,32,59,32,101,110,100,32,117,115,101,114,115,32,59,32,109,97,110,97,103,101,109,101,110,116,32,59,32,116,101,99,104,110,111,108,111,103,121,32,59,32,80,114,111,83,117,112,112,111,114,116,32,59,32,99,111,110,116,114,97,99,116,111,114,115,32,59,32,99,111,109,112,108,105,97,110,99,101,32,59,32,114,101,112,108,97,99,101,109,101,110,116,32,59,32,99,101,114,116,105,102,105,101,100,32,99,111,110,115,117,108,116,97,110,116,115,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,114,101,119,97,114,100,115,32,59,32,100,101,108,108,32,59,32,118,105,114,116,117,97,108,32,100,101,115,107,116,111,112,115,32,59,32,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,69,110,116,101,114,112,114,105,115,101,32,83,117,105,116,101,32,59,32,109,97,105,110,116,97,105,110,105,110,103,32,115,101,99,117,114,105,116,121,32,59,32,101,110,100,32,117,115,101,114,115,32,59,32,109,97,110,97,103,101,109,101,110,116,32,59,32,116,101,99,104,110,111,108,111,103,121,32,59,32,80,114,111,83,117,112,112,111,114,116,32,59,32,99,111,110,116,114,97,99,116,111,114,115,32,59,32,99,111,109,112,108,105,97,110,99,101,32,59,32,114,101,112,108,97,99,101,109,101,110,116,32,59,32,99,101,114,116,105,102,105,101,100,32,99,111,110,115,117,108,116,97,110,116,115,34,44,10,32,32,32,32,32,32,34,112,114,105,110,116,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,51,52,48,48,48,44,10,32,32,32,32,32,32,34,115,112,101,99,105,102,105,99,97,116,105,111,110,115,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,114,111,100,117,99,116,100,101,116,97,105,108,115,116,120,110,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,35,116,101,99,104,115,112,101,99,115,34,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,51,48,99,48,54,102,52,55,102,98,100,99,51,57,55,99,100,56,51,100,102,101,53,54,57,97,97,100,50,56,53,98,54,53,50,97,56,55,51,56,51,57,101,56,99,50,51,51,53,48,51,57,57,56,57,49,57,50,102,50,34,44,10,32,32,32,32,32,32,34,100,101,108,108,101,109,99,112,114,111,100,117,99,116,100,101,115,99,114,105,112,116,105,111,110,34,32,58,32,34,86,105,101,119,32,116,104,101,32,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,70,76,69,88,32,97,110,100,32,115,104,111,112,32,97,108,108,32,111,102,32,111,117,114,32,83,121,115,116,101,109,115,32,77,97,110,97,103,101,109,101,110,116,32,83,111,102,116,119,97,114,101,32,97,116,32,68,101,108,108,46,99,111,109,46,32,83,105,109,112,108,105,102,121,32,100,101,115,107,116,111,112,32,109,97,110,97,103,101,109,101,110,116,32,105,110,32,121,111,117,114,32,101,110,116,101,114,112,114,105,115,101,46,32,84,104,101,32,98,101,100,114,111,99,107,32,111,102,32,116,104,101,32,100,97,116,97,32,99,101,110,116,101,114,46,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,50,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,70,76,69,88,32,58,32,83,121,115,116,101,109,115,32,77,97,110,97,103,101,109,101,110,116,32,83,111,102,116,119,97,114,101,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,48,57,48,48,48,44,10,32,32,32,32,32,32,34,102,105,108,101,110,97,109,101,34,32,58,32,34,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,51,52,56,56,54,50,56,55,53,50,48,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,50,50,49,53,49,50,44,10,32,32,32,32,32,32,34,108,101,97,114,110,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,114,111,100,117,99,116,100,101,116,97,105,108,115,116,120,110,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,35,102,101,97,116,117,114,101,115,34,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,101,118,101,114,121,116,104,105,110,103,111,110,112,97,103,101,34,32,58,32,34,85,110,105,116,101,100,32,83,116,97,116,101,115,32,70,111,114,32,66,117,115,105,110,101,115,115,32,83,101,114,118,101,114,115,44,32,83,116,111,114,97,103,101,32,38,97,109,112,59,32,78,101,116,119,111,114,107,105,110,103,32,83,101,114,118,101,114,115,32,83,121,115,116,101,109,115,32,77,97,110,97,103,101,109,101,110,116,32,83,111,102,116,119,97,114,101,32,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,70,76,69,88,32,83,104,111,112,32,83,101,114,118,101,114,115,32,73,110,116,101,108,194,174,32,88,101,111,110,194,174,32,83,99,97,108,97,98,108,101,32,80,114,111,99,101,115,115,111,114,115,32,67,111,109,112,97,114,101,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,69,77,67,83,101,114,118,101,114,115,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,56,54,49,49,53,57,55,48,54,53,44,10,32,32,32,32,32,32,34,112,114,105,99,105,110,103,34,32,58,32,34,36,34,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,50,50,49,53,49,50,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,101,108,108,69,77,67,83,101,114,118,101,114,115,34,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,87,101,98,34,44,10,32,32,32,32,32,32,34,99,111,109,112,97,114,101,108,105,110,107,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,51,52,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,87,101,98,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,104,116,109,108,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,51,52,56,56,54,50,56,55,53,50,48,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,86,77,119,97,114,101,32,72,111,114,105,122,111,110,32,70,76,69,88,32,58,32,83,121,115,116,101,109,115,32,77,97,110,97,103,101,109,101,110,116,32,83,111,102,116,119,97,114,101,32,124,32,68,101,108,108,32,85,83,65,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,50,49,56,51,52,36,104,116,116,112,115,58,47,47,119,119,119,46,100,101,108,108,46,99,111,109,47,101,110,45,117,115,47,119,111,114,107,47,115,104,111,112,47,112,111,118,119,47,118,109,119,97,114,101,45,104,111,114,105,122,111,110,45,102,108,101,120,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,69,110,106,111,121,32,109,101,109,98,101,114,115,45,111,110,108,121,32,114,101,119,97,114,100,115,32,97,110,100,32,100,105,115,99,111,117,110,116,115,32,46,46,46,32,83,111,114,114,121,44,32,116,104,105,115,32,105,116,101,109,32,105,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,32,97,110,121,109,111,114,101,32,102,111,114,32,112,117,114,99,104,97,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,83,107,105,112,32,116,111,32,109,97,105,110,32,99,111,110,116,101,110,116,32,83,101,97,114,99,104,32,67,97,110,99,101,108,32,67,97,114,116,32,89,111,117,114,32,68,101,108,108,46,99,111,109,32,67,97,114,116,115,32,87,101,108,99,111,109,101,32,116,111,32,68,101,108,108,32,77,121,32,65,99,99,111,117,110,116,32,80,108,97,99,101,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,65,80,69,88,32,68,97,116,97,32,83,116,111,114,97,103,101,32,83,101,114,118,105,99,101,115,32,68,97,116,97,32,77,105,103,114,97,116,105,111,110,32,67,114,101,100,105,116,115,32,73,110,102,111,103,114,97,112,104,105,99,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,52,55,56,49,52,36,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,82,32,86,32,73,32,67,69,32,46,46,46,32,83,105,109,112,108,105,102,121,32,121,32,111,117,114,32,115,116,111,114,97,103,101,32,119,105,116,104,32,111,117,114,32,97,115,45,97,45,83,101,114,118,105,99,101,32,109,111,100,101,108,32,97,110,100,32,108,105,109,105,116,101,100,32,116,105,109,101,32,112,114,111,109,111,116,105,111,110,115,46,32,46,46,46,32,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,65,32,80,32,69,32,88,32,68,32,83,32,84,32,79,32,82,32,65,32,71,32,80,32,82,32,79,32,77,32,65,32,84,65,32,69,32,83,32,69,32,79,32,84,32,73,32,79,32,78,32,83,32,82,32,86,32,73,32,67,69,32,83,105,109,112,108,105,102,121,32,121,32,111,117,114,32,115,116,111,114,97,103,101,32,119,105,116,104,32,111,117,114,32,97,115,32,46,46,46,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,65,80,69,88,32,68,97,116,97,32,83,116,111,114,97,103,101,32,83,101,114,118,105,99,101,115,32,68,97,116,97,32,77,105,103,114,97,116,105,111,110,32,67,114,101,100,105,116,115,32,73,110,102,111,103,114,97,112,104,105,99,34,44,10,32,32,32,32,32,32,34,115,121,115,97,117,116,104,111,114,34,32,58,32,34,66,114,97,115,117,114,101,44,32,68,111,110,110,97,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,102,98,110,99,50,76,50,81,88,195,177,97,110,106,110,101,101,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,102,98,110,99,50,76,50,81,88,195,177,97,110,106,110,101,101,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,49,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,48,46,55,53,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,99,111,115,116,115,32,59,32,112,114,111,109,111,116,105,111,110,115,32,59,32,115,116,111,114,97,103,101,32,59,32,115,119,105,116,99,104,105,110,103,32,115,101,114,118,105,99,101,115,32,59,32,99,111,109,112,108,101,120,32,105,116,105,101,115,32,59,32,100,97,116,97,32,109,105,103,114,97,116,105,111,110,32,59,32,105,103,114,97,116,105,111,110,32,67,114,101,100,105,116,115,32,59,32,97,115,45,97,45,83,101,114,118,105,99,101,32,109,111,100,101,108,32,59,32,111,118,101,114,112,114,111,118,105,115,105,111,110,105,110,103,32,59,32,101,97,115,121,45,116,111,45,117,115,101,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,99,111,115,116,115,32,59,32,112,114,111,109,111,116,105,111,110,115,32,59,32,115,116,111,114,97,103,101,32,59,32,115,119,105,116,99,104,105,110,103,32,115,101,114,118,105,99,101,115,32,59,32,99,111,109,112,108,101,120,32,105,116,105,101,115,32,59,32,100,97,116,97,32,109,105,103,114,97,116,105,111,110,32,59,32,105,103,114,97,116,105,111,110,32,67,114,101,100,105,116,115,32,59,32,97,115,45,97,45,83,101,114,118,105,99,101,32,109,111,100,101,108,32,59,32,111,118,101,114,112,114,111,118,105,115,105,111,110,105,110,103,32,59,32,101,97,115,121,45,116,111,45,117,115,101,34,44,10,32,32,32,32,32,32,34,100,111,99,117,109,101,110,116,116,121,112,101,34,32,58,32,34,87,101,98,80,97,103,101,34,44,10,32,32,32,32,32,32,34,99,111,110,116,101,110,116,116,121,112,101,34,32,58,32,34,98,105,110,97,114,121,100,97,116,97,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,48,49,48,48,48,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,52,54,53,52,101,49,102,97,53,56,102,99,52,55,54,100,102,101,56,57,49,53,54,51,49,99,57,48,50,101,99,51,57,50,56,57,50,101,55,54,55,57,54,52,55,52,56,48,49,51,50,49,51,53,50,54,56,48,50,55,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,56,49,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,65,80,69,88,32,68,97,116,97,32,83,116,111,114,97,103,101,32,83,101,114,118,105,99,101,115,32,68,97,116,97,32,77,105,103,114,97,116,105,111,110,32,67,114,101,100,105,116,115,32,73,110,102,111,103,114,97,112,104,105,99,34,44,10,32,32,32,32,32,32,34,115,117,98,106,101,99,116,34,32,58,32,34,84,104,105,115,32,105,110,102,111,103,114,97,112,104,105,99,32,104,105,103,104,108,105,103,104,116,115,32,98,111,116,104,32,116,104,101,32,100,97,116,97,32,109,105,103,114,97,116,105,111,110,32,99,114,101,100,105,116,115,32,97,110,100,32,57,48,32,100,97,121,32,109,111,110,101,121,32,98,97,99,107,32,103,117,97,114,97,110,116,101,101,46,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,51,57,52,49,48,48,48,44,10,32,32,32,32,32,32,34,100,101,115,97,117,116,111,102,105,108,101,102,111,114,109,97,116,34,32,58,32,34,80,68,70,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,103,115,97,115,105,116,101,34,32,58,32,34,117,119,95,112,114,101,118,98,95,116,115,107,105,116,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,48,49,55,51,55,48,55,57,55,52,56,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,52,50,48,55,48,48,48,50,44,10,32,32,32,32,32,32,34,115,121,115,100,111,99,117,109,101,110,116,116,121,112,101,34,32,58,32,34,87,101,98,80,97,103,101,34,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,100,101,115,102,97,105,108,114,101,97,115,111,110,34,32,58,32,34,119,101,98,115,118,99,82,101,115,112,111,110,115,101,40,52,48,51,41,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,69,83,45,97,115,115,101,116,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,56,53,56,49,50,56,50,54,50,53,44,10,32,32,32,32,32,32,34,115,121,115,115,117,98,106,101,99,116,34,32,58,32,34,84,104,105,115,32,105,110,102,111,103,114,97,112,104,105,99,32,104,105,103,104,108,105,103,104,116,115,32,98,111,116,104,32,116,104,101,32,100,97,116,97,32,109,105,103,114,97,116,105,111,110,32,99,114,101,100,105,116,115,32,97,110,100,32,57,48,32,100,97,121,32,109,111,110,101,121,32,98,97,99,107,32,103,117,97,114,97,110,116,101,101,46,34,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,52,50,48,55,48,48,48,50,44,10,32,32,32,32,32,32,34,97,117,116,104,111,114,34,32,58,32,34,66,114,97,115,117,114,101,44,32,68,111,110,110,97,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,69,83,45,97,115,115,101,116,34,44,10,32,32,32,32,32,32,34,115,105,116,101,109,97,112,108,97,115,116,109,111,100,105,102,105,101,100,34,32,58,32,49,54,51,52,54,57,51,57,52,49,48,48,48,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,53,52,48,49,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,105,116,101,109,97,112,112,97,114,101,110,116,117,114,108,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,115,105,116,101,109,97,112,45,97,115,115,101,116,45,52,49,46,120,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,53,52,48,49,55,51,55,48,55,57,55,52,56,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,65,80,69,88,32,68,97,116,97,32,83,116,111,114,97,103,101,32,83,101,114,118,105,99,101,115,32,68,97,116,97,32,77,105,103,114,97,116,105,111,110,32,67,114,101,100,105,116,115,32,73,110,102,111,103,114,97,112,104,105,99,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,52,55,56,49,52,36,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,115,111,108,117,116,105,111,110,115,47,97,112,101,120,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,97,100,115,115,45,100,97,116,97,45,109,105,103,114,97,116,105,111,110,45,99,114,101,100,105,116,115,45,105,110,102,111,103,114,97,112,104,105,99,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,82,32,86,32,73,32,67,69,32,46,46,46,32,83,105,109,112,108,105,102,121,32,121,32,111,117,114,32,115,116,111,114,97,103,101,32,119,105,116,104,32,111,117,114,32,97,115,45,97,45,83,101,114,118,105,99,101,32,109,111,100,101,108,32,97,110,100,32,108,105,109,105,116,101,100,32,116,105,109,101,32,112,114,111,109,111,116,105,111,110,115,46,32,46,46,46,32,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,65,32,80,32,69,32,88,32,68,32,83,32,84,32,79,32,82,32,65,32,71,32,80,32,82,32,79,32,77,32,65,32,84,65,32,69,32,83,32,69,32,79,32,84,32,73,32,79,32,78,32,83,32,82,32,86,32,73,32,67,69,32,83,105,109,112,108,105,102,121,32,121,32,111,117,114,32,115,116,111,114,97,103,101,32,119,105,116,104,32,111,117,114,32,97,115,32,46,46,46,34,10,32,32,125,44,32,123,10,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,70,114,111,109,32,65,110,97,108,121,116,105,99,115,32,116,111,32,65,73,34,44,10,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,99,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,117,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,52,55,56,49,52,36,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,101,120,99,101,114,112,116,34,32,58,32,34,65,110,97,108,121,116,105,99,115,32,104,111,108,100,115,32,116,114,101,109,101,110,100,111,117,115,32,112,111,116,101,110,116,105,97,108,32,102,111,114,32,111,114,103,97,110,105,122,97,116,105,111,110,115,32,116,104,97,116,32,119,97,110,116,32,116,111,32,100,114,97,109,97,116,105,99,97,108,108,121,32,103,114,111,119,32,116,104,101,105,114,32,114,101,118,101,110,46,46,46,34,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,70,82,79,77,32,65,78,65,76,89,84,73,67,83,32,84,79,32,65,73,58,32,77,97,107,105,110,103,32,115,109,97,114,116,32,98,117,115,105,110,101,115,115,32,100,101,99,105,115,105,111,110,115,32,98,121,32,117,110,108,111,99,107,105,110,103,32,116,104,101,32,118,97,108,117,101,32,111,102,32,121,111,117,114,32,100,97,116,97,32,79,82,71,65,78,73,90,69,34,44,10,32,32,32,32,34,115,117,109,109,97,114,121,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,102,108,97,103,115,34,32,58,32,34,72,97,115,72,116,109,108,86,101,114,115,105,111,110,34,44,10,32,32,32,32,34,104,97,115,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,116,114,117,101,44,10,32,32,32,32,34,104,97,115,77,111,98,105,108,101,72,116,109,108,86,101,114,115,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,115,99,111,114,101,34,32,58,32,49,53,52,55,44,10,32,32,32,32,34,112,101,114,99,101,110,116,83,99,111,114,101,34,32,58,32,56,56,46,53,48,51,55,52,44,10,32,32,32,32,34,114,97,110,107,105,110,103,73,110,102,111,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,114,97,116,105,110,103,34,32,58,32,48,46,48,44,10,32,32,32,32,34,105,115,84,111,112,82,101,115,117,108,116,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,82,101,99,111,109,109,101,110,100,97,116,105,111,110,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,105,115,85,115,101,114,65,99,116,105,111,110,86,105,101,119,34,32,58,32,102,97,108,115,101,44,10,32,32,32,32,34,116,105,116,108,101,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,102,105,114,115,116,83,101,110,116,101,110,99,101,115,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,101,120,99,101,114,112,116,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,114,105,110,116,97,98,108,101,85,114,105,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,115,117,109,109,97,114,121,72,105,103,104,108,105,103,104,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,112,97,114,101,110,116,82,101,115,117,108,116,34,32,58,32,110,117,108,108,44,10,32,32,32,32,34,99,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,116,111,116,97,108,78,117,109,98,101,114,79,102,67,104,105,108,100,82,101,115,117,108,116,115,34,32,58,32,48,44,10,32,32,32,32,34,97,98,115,101,110,116,84,101,114,109,115,34,32,58,32,91,32,93,44,10,32,32,32,32,34,114,97,119,34,32,58,32,123,10,32,32,32,32,32,32,34,115,121,115,116,105,116,108,101,34,32,58,32,34,70,114,111,109,32,65,110,97,108,121,116,105,99,115,32,116,111,32,65,73,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,104,97,115,104,34,32,58,32,34,118,119,48,89,89,86,97,97,85,52,118,114,97,121,76,107,34,44,10,32,32,32,32,32,32,34,117,114,105,104,97,115,104,34,32,58,32,34,118,119,48,89,89,86,97,97,85,52,118,114,97,121,76,107,34,44,10,32,32,32,32,32,32,34,115,121,115,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,115,121,115,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,55,56,44,10,32,32,32,32,32,32,34,118,97,108,105,100,105,116,121,115,99,111,114,101,34,32,58,32,49,46,48,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,99,101,112,116,115,34,32,58,32,34,68,101,108,108,32,84,101,99,104,110,111,108,111,103,105,101,115,32,59,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,98,117,115,105,110,101,115,115,32,117,110,105,116,115,32,59,32,105,110,116,101,108,108,105,103,101,110,99,101,32,116,111,111,108,115,32,59,32,109,97,99,104,105,110,101,32,108,101,97,114,110,105,110,103,32,59,32,109,105,108,101,115,116,111,110,101,115,32,59,32,65,73,32,59,32,105,110,102,114,97,115,116,114,117,99,116,117,114,101,32,59,32,111,119,110,32,59,32,103,111,118,101,114,110,97,110,99,101,32,114,117,108,101,115,32,59,32,109,97,115,116,101,114,45,100,97,116,97,32,109,97,110,97,103,101,109,101,110,116,32,59,32,111,112,101,114,97,116,105,111,110,97,108,32,101,102,102,105,99,105,101,110,99,121,32,59,32,116,114,97,110,115,97,99,116,105,111,110,115,32,59,32,105,110,115,105,103,104,116,115,32,59,32,99,111,110,115,117,108,116,105,110,103,32,115,101,114,118,105,99,101,115,34,44,10,32,32,32,32,32,32,34,99,111,110,99,101,112,116,115,34,32,58,32,34,68,101,108,108,32,84,101,99,104,110,111,108,111,103,105,101,115,32,59,32,68,101,108,108,84,101,99,104,110,111,108,111,103,105,101,115,32,59,32,112,114,111,100,117,99,116,105,118,105,116,121,32,59,32,98,117,115,105,110,101,115,115,32,117,110,105,116,115,32,59,32,105,110,116,101,108,108,105,103,101,110,99,101,32,116,111,111,108,115,32,59,32,109,97,99,104,105,110,101,32,108,101,97,114,110,105,110,103,32,59,32,109,105,108,101,115,116,111,110,101,115,32,59,32,65,73,32,59,32,105,110,102,114,97,115,116,114,117,99,116,117,114,101,32,59,32,111,119,110,32,59,32,103,111,118,101,114,110,97,110,99,101,32,114,117,108,101,115,32,59,32,109,97,115,116,101,114,45,100,97,116,97,32,109,97,110,97,103,101,109,101,110,116,32,59,32,111,112,101,114,97,116,105,111,110,97,108,32,101,102,102,105,99,105,101,110,99,121,32,59,32,116,114,97,110,115,97,99,116,105,111,110,115,32,59,32,105,110,115,105,103,104,116,115,32,59,32,99,111,110,115,117,108,116,105,110,103,32,115,101,114,118,105,99,101,115,34,44,10,32,32,32,32,32,32,34,100,111,99,117,109,101,110,116,116,121,112,101,34,32,58,32,34,87,101,98,80,97,103,101,34,44,10,32,32,32,32,32,32,34,99,111,110,116,101,110,116,116,121,112,101,34,32,58,32,34,98,105,110,97,114,121,100,97,116,97,34,44,10,32,32,32,32,32,32,34,115,121,115,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,51,54,48,51,48,48,48,44,10,32,32,32,32,32,32,34,112,101,114,109,97,110,101,110,116,105,100,34,32,58,32,34,52,57,101,99,99,99,56,57,54,53,49,57,98,48,100,55,97,101,50,56,50,53,102,49,57,57,50,56,56,50,102,102,99,53,102,101,102,98,51,50,48,56,54,55,48,97,98,50,54,52,55,48,102,50,102,99,53,100,49,49,34,44,10,32,32,32,32,32,32,34,115,121,115,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,116,114,97,110,115,97,99,116,105,111,110,105,100,34,32,58,32,49,54,52,55,53,55,56,44,10,32,32,32,32,32,32,34,116,105,116,108,101,34,32,58,32,34,70,114,111,109,32,65,110,97,108,121,116,105,99,115,32,116,111,32,65,73,34,44,10,32,32,32,32,32,32,34,115,117,98,106,101,99,116,34,32,58,32,34,77,97,107,105,110,103,32,115,109,97,114,116,32,98,117,115,105,110,101,115,115,32,100,101,99,105,115,105,111,110,115,32,98,121,32,117,110,108,111,99,107,105,110,103,32,116,104,101,32,118,97,108,117,101,32,111,102,32,121,111,117,114,32,100,97,116,97,32,45,32,65,32,103,117,105,100,101,32,98,97,115,101,100,32,111,110,32,108,101,115,115,111,110,115,32,108,101,97,114,110,101,100,32,102,114,111,109,32,68,101,108,108,32,69,77,67,39,115,32,100,97,116,97,32,97,110,97,108,121,116,105,99,115,32,106,111,117,114,110,101,121,32,97,110,100,32,116,104,101,32,114,111,97,100,32,116,111,32,97,114,116,105,102,105,99,105,97,108,32,105,110,116,101,108,108,105,103,101,110,99,101,46,34,44,10,32,32,32,32,32,32,34,100,97,116,101,34,32,58,32,49,54,51,52,54,57,50,53,55,55,48,48,48,44,10,32,32,32,32,32,32,34,100,101,115,97,117,116,111,102,105,108,101,102,111,114,109,97,116,34,32,58,32,34,80,68,70,34,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,103,115,97,115,105,116,101,34,32,58,32,34,117,119,95,112,114,101,118,98,95,116,115,107,105,116,34,44,10,32,32,32,32,32,32,34,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,51,54,48,50,56,56,53,48,53,49,54,51,56,44,10,32,32,32,32,32,32,34,115,105,122,101,34,32,58,32,49,54,52,56,50,54,51,44,10,32,32,32,32,32,32,34,115,121,115,100,111,99,117,109,101,110,116,116,121,112,101,34,32,58,32,34,87,101,98,80,97,103,101,34,44,10,32,32,32,32,32,32,34,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,100,101,115,102,97,105,108,114,101,97,115,111,110,34,32,58,32,34,119,101,98,115,118,99,82,101,115,112,111,110,115,101,40,52,48,51,41,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,34,32,58,32,34,68,69,83,45,97,115,115,101,116,34,44,10,32,32,32,32,32,32,34,111,114,100,101,114,105,110,103,105,100,34,32,58,32,50,49,50,53,48,49,52,57,54,55,57,49,52,51,56,57,49,54,44,10,32,32,32,32,32,32,34,115,121,115,115,117,98,106,101,99,116,34,32,58,32,34,77,97,107,105,110,103,32,115,109,97,114,116,32,98,117,115,105,110,101,115,115,32,100,101,99,105,115,105,111,110,115,32,98,121,32,117,110,108,111,99,107,105,110,103,32,116,104,101,32,118,97,108,117,101,32,111,102,32,121,111,117,114,32,100,97,116,97,32,45,32,65,32,103,117,105,100,101,32,98,97,115,101,100,32,111,110,32,108,101,115,115,111,110,115,32,108,101,97,114,110,101,100,32,102,114,111,109,32,68,101,108,108,32,69,77,67,39,115,32,100,97,116,97,32,97,110,97,108,121,116,105,99,115,32,106,111,117,114,110,101,121,32,97,110,100,32,116,104,101,32,114,111,97,100,32,116,111,32,97,114,116,105,102,105,99,105,97,108,32,105,110,116,101,108,108,105,103,101,110,99,101,46,34,44,10,32,32,32,32,32,32,34,115,121,115,115,105,122,101,34,32,58,32,49,54,52,56,50,54,51,44,10,32,32,32,32,32,32,34,115,111,117,114,99,101,34,32,58,32,34,68,69,83,45,97,115,115,101,116,34,44,10,32,32,32,32,32,32,34,115,105,116,101,109,97,112,108,97,115,116,109,111,100,105,102,105,101,100,34,32,58,32,49,54,51,52,54,57,50,53,55,55,48,48,48,44,10,32,32,32,32,32,32,34,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,44,10,32,32,32,32,32,32,34,115,121,115,115,111,117,114,99,101,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,34,44,10,32,32,32,32,32,32,34,105,110,100,101,120,101,100,100,97,116,101,34,32,58,32,49,54,51,52,54,57,51,54,48,51,48,48,48,44,10,32,32,32,32,32,32,34,99,111,110,110,101,99,116,111,114,116,121,112,101,34,32,58,32,34,83,105,116,101,109,97,112,67,114,97,119,108,101,114,34,44,10,32,32,32,32,32,32,34,102,105,108,101,116,121,112,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,115,121,115,99,108,105,99,107,97,98,108,101,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,115,121,115,102,105,108,101,116,121,112,101,34,32,58,32,34,112,100,102,34,44,10,32,32,32,32,32,32,34,108,97,110,103,117,97,103,101,34,32,58,32,91,32,34,69,110,103,108,105,115,104,34,32,93,44,10,32,32,32,32,32,32,34,115,105,116,101,109,97,112,112,97,114,101,110,116,117,114,108,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,115,105,116,101,109,97,112,45,97,115,115,101,116,45,50,51,46,120,109,108,34,44,10,32,32,32,32,32,32,34,115,121,115,114,111,119,105,100,34,32,58,32,49,54,51,52,54,57,51,54,48,50,56,56,53,48,53,49,54,51,56,44,10,32,32,32,32,32,32,34,117,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,32,32,34,115,121,115,99,111,108,108,101,99,116,105,111,110,34,32,58,32,34,100,101,102,97,117,108,116,34,10,32,32,32,32,125,44,10,32,32,32,32,34,84,105,116,108,101,34,32,58,32,34,70,114,111,109,32,65,110,97,108,121,116,105,99,115,32,116,111,32,65,73,34,44,10,32,32,32,32,34,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,80,114,105,110,116,97,98,108,101,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,67,108,105,99,107,85,114,105,34,32,58,32,34,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,85,110,105,113,117,101,73,100,34,32,58,32,34,52,50,46,52,55,56,49,52,36,104,116,116,112,58,47,47,119,119,119,46,100,101,108,108,101,109,99,46,99,111,109,47,99,111,118,101,111,47,99,111,110,116,101,110,116,47,100,97,109,47,100,111,99,117,109,101,110,116,115,45,97,110,100,45,118,105,100,101,111,115,47,100,118,49,47,101,110,47,112,114,111,100,117,99,116,115,47,114,101,97,100,121,45,115,111,108,117,116,105,111,110,115,47,98,114,105,101,102,115,45,115,117,109,109,97,114,105,101,115,47,102,114,111,109,45,97,110,97,108,121,116,105,99,115,45,116,111,45,97,105,45,98,114,111,99,104,117,114,101,46,112,100,102,63,97,112,112,78,97,109,101,61,65,83,83,69,84,34,44,10,32,32,32,32,34,69,120,99,101,114,112,116,34,32,58,32,34,65,110,97,108,121,116,105,99,115,32,104,111,108,100,115,32,116,114,101,109,101,110,100,111,117,115,32,112,111,116,101,110,116,105,97,108,32,102,111,114,32,111,114,103,97,110,105,122,97,116,105,111,110,115,32,116,104,97,116,32,119,97,110,116,32,116,111,32,100,114,97,109,97,116,105,99,97,108,108,121,32,103,114,111,119,32,116,104,101,105,114,32,114,101,118,101,110,46,46,46,34,44,10,32,32,32,32,34,70,105,114,115,116,83,101,110,116,101,110,99,101,115,34,32,58,32,34,70,82,79,77,32,65,78,65,76,89,84,73,67,83,32,84,79,32,65,73,58,32,77,97,107,105,110,103,32,115,109,97,114,116,32,98,117,115,105,110,101,115,115,32,100,101,99,105,115,105,111,110,115,32,98,121,32,117,110,108,111,99,107,105,110,103,32,116,104,101,32,118,97,108,117,101,32,111,102,32,121,111,117,114,32,100,97,116,97,32,79,82,71,65,78,73,90,69,34,10,32,32,125,32,93,10,125]}",
  "fashion_request": "Y3VybCAnaHR0cHM6Ly9wbGF0Zm9ybS5jbG91ZC5jb3Zlby5jb20vcmVzdC9zZWFyY2gvdjI/b3JnYW5pemF0aW9uSWQ9ZmFzaGlvbmNvdmVvZGVtb2NvbWd6aDdpZXA4JyAgIC1IICdhdXRob3JpdHk6IHBsYXRmb3JtLmNsb3VkLmNvdmVvLmNvbScgICAtSCAnc2VjLWNoLXVhOiAiQ2hyb21pdW0iO3Y9Ijk0IiwgIkdvb2dsZSBDaHJvbWUiO3Y9Ijk0IiwgIjtOb3QgQSBCcmFuZCI7dj0iOTkiJyAgIC1IICdhdXRob3JpemF0aW9uOiBCZWFyZXIgeHgxNDllM2VjOS03ODZmLTRjNmMtYjY0Zi00OWE0MDNiOTMwZGUnICAgLUggJ2RudDogMScgICAtSCAnY29udGVudC10eXBlOiBhcHBsaWNhdGlvbi9qc29uJyAgIC1IICdzZWMtY2gtdWEtbW9iaWxlOiA/MCcgICAtSCAndXNlci1hZ2VudDogTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTVfNykgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzk0LjAuNDYwNi44MSBTYWZhcmkvNTM3LjM2JyAgIC1IICdzZWMtY2gtdWEtcGxhdGZvcm06ICJtYWNPUyInICAgLUggJ2FjY2VwdDogKi8qJyAgIC1IICdvcmlnaW46IGh0dHBzOi8vZmFzaGlvbi5jb3Zlb2RlbW8uY29tJyAgIC1IICdzZWMtZmV0Y2gtc2l0ZTogY3Jvc3Mtc2l0ZScgICAtSCAnc2VjLWZldGNoLW1vZGU6IGNvcnMnICAgLUggJ3NlYy1mZXRjaC1kZXN0OiBlbXB0eScgICAtSCAncmVmZXJlcjogaHR0cHM6Ly9mYXNoaW9uLmNvdmVvZGVtby5jb20vJyAgIC1IICdhY2NlcHQtbGFuZ3VhZ2U6IGVuLVVTLGVuO3E9MC45LGZyO3E9MC44LGphO3E9MC43JyAgIC0tZGF0YS1yYXcgJ3sibG9jYWxlIjoiZW4tVVMiLCJkZWJ1ZyI6ZmFsc2UsInRhYiI6ImRlZmF1bHQiLCJyZWZlcnJlciI6ImRlZmF1bHQiLCJ0aW1lem9uZSI6IkFtZXJpY2EvVG9yb250byIsInZpc2l0b3JJZCI6IiIsImZpZWxkc1RvSW5jbHVkZSI6WyJhdXRob3IiLCJsYW5ndWFnZSIsInVyaWhhc2giLCJvYmplY3R0eXBlIiwiY29sbGVjdGlvbiIsInNvdXJjZSIsInBlcm1hbmVudGlkIiwiY2F0X2F0dHJpYnV0ZXMiLCJjYXRfYXZhaWxhYmxlX3NpemVfdHlwZXMiLCJjYXRfYXZhaWxhYmxlX3NpemVzIiwiY2F0X2JyYW5kIiwiY2F0X2NhdGVnb3JpZXMiLCJjYXRfY29sb3IiLCJjYXRfY29sb3JfY29kZSIsImNhdF9jb2xvcl9zd2F0Y2giLCJjYXRfZGlzY291bnQiLCJjYXRfZ2VuZGVyIiwiY2F0X21ycCIsImNhdF9yYXRpbmdfY291bnQiLCJjYXRfcmV0YWlsZXIiLCJjYXRfcmV0YWlsZXJfY2F0ZWdvcnkiLCJjYXRfcmV0YWlsZXJfY2F0ZWdvcnloIiwiY2F0X3NpemUiLCJjYXRfc2l6ZV90eXBlIiwiY2F0X3NsdWciLCJjYXRfdG90YWxfc2l6ZXMiLCJlY19icmFuZCIsImVjX2NhdGVnb3J5IiwiZWNfY29ncyIsImVjX2Rlc2NyaXB0aW9uIiwiZWNfaW1hZ2VzIiwiZWNfaW5fc3RvY2siLCJlY19pdGVtX2dyb3VwX2lkIiwiZWNfbmFtZSIsImVjX3BhcmVudF9pZCIsImVjX3ByaWNlIiwiZWNfcHJvZHVjdF9pZCIsImVjX3Byb21vX3ByaWNlIiwiZWNfcmF0aW5nIiwiZWNfc2hvcnRkZXNjIiwiZWNfc2t1cyIsImVjX3RodW1ibmFpbHMiLCJlY192YXJpYW50X3NrdSIsImNhdGVnb3J5IiwiY2xpY2tVcmkiLCJza3UiLCJ0aXRsZSJdLCJwaXBlbGluZSI6IlNlYXJjaCIsInEiOiIiLCJlbmFibGVRdWVyeVN5bnRheCI6ZmFsc2UsInNlYXJjaEh1YiI6Ik1haW5TZWFyY2giLCJzb3J0Q3JpdGVyaWEiOiJyZWxldmFuY3kiLCJlbmFibGVEaWRZb3VNZWFuIjp0cnVlLCJmYWNldHMiOlt7ImRlbGltaXRpbmdDaGFyYWN0ZXIiOiI+IiwiZmlsdGVyRmFjZXRDb3VudCI6dHJ1ZSwiaW5qZWN0aW9uRGVwdGgiOjEwMDAsIm51bWJlck9mVmFsdWVzIjo2LCJzb3J0Q3JpdGVyaWEiOiJvY2N1cnJlbmNlcyIsInR5cGUiOiJzcGVjaWZpYyIsImN1cnJlbnRWYWx1ZXMiOltdLCJmcmVlemVDdXJyZW50VmFsdWVzIjpmYWxzZSwiaXNGaWVsZEV4cGFuZGVkIjpmYWxzZSwicHJldmVudEF1dG9TZWxlY3QiOmZhbHNlLCJmYWNldFNlYXJjaCI6eyJjYXB0aW9ucyI6e30sIm51bWJlck9mVmFsdWVzIjoxMCwicXVlcnkiOiIifSwiZmFjZXRJZCI6ImNhdF9jb2xvciIsImZpZWxkIjoiY2F0X2NvbG9yIn0seyJkZWxpbWl0aW5nQ2hhcmFjdGVyIjoiPiIsImZpbHRlckZhY2V0Q291bnQiOnRydWUsImluamVjdGlvbkRlcHRoIjoxMDAwLCJudW1iZXJPZlZhbHVlcyI6MTUsInNvcnRDcml0ZXJpYSI6ImFscGhhbnVtZXJpYyIsInR5cGUiOiJzcGVjaWZpYyIsImN1cnJlbnRWYWx1ZXMiOltdLCJmcmVlemVDdXJyZW50VmFsdWVzIjpmYWxzZSwiaXNGaWVsZEV4cGFuZGVkIjpmYWxzZSwicHJldmVudEF1dG9TZWxlY3QiOmZhbHNlLCJmYWNldFNlYXJjaCI6eyJjYXB0aW9ucyI6e30sIm51bWJlck9mVmFsdWVzIjoxMCwicXVlcnkiOiIifSwiZmFjZXRJZCI6ImNhdF9zaXplIiwiZmllbGQiOiJjYXRfc2l6ZSJ9LHsiZGVsaW1pdGluZ0NoYXJhY3RlciI6Ij4iLCJmaWx0ZXJGYWNldENvdW50Ijp0cnVlLCJpbmplY3Rpb25EZXB0aCI6MTAwMCwibnVtYmVyT2ZWYWx1ZXMiOjUsInNvcnRDcml0ZXJpYSI6Im9jY3VycmVuY2VzIiwidHlwZSI6InNwZWNpZmljIiwiY3VycmVudFZhbHVlcyI6W10sImZyZWV6ZUN1cnJlbnRWYWx1ZXMiOmZhbHNlLCJpc0ZpZWxkRXhwYW5kZWQiOmZhbHNlLCJwcmV2ZW50QXV0b1NlbGVjdCI6ZmFsc2UsImZhY2V0U2VhcmNoIjp7ImNhcHRpb25zIjp7fSwibnVtYmVyT2ZWYWx1ZXMiOjEwLCJxdWVyeSI6IiJ9LCJmYWNldElkIjoiZWNfYnJhbmQiLCJmaWVsZCI6ImVjX2JyYW5kIn0seyJkZWxpbWl0aW5nQ2hhcmFjdGVyIjoiPiIsImZpbHRlckZhY2V0Q291bnQiOnRydWUsImluamVjdGlvbkRlcHRoIjoxMDAwLCJudW1iZXJPZlZhbHVlcyI6NSwic29ydENyaXRlcmlhIjoib2NjdXJyZW5jZXMiLCJ0eXBlIjoic3BlY2lmaWMiLCJjdXJyZW50VmFsdWVzIjpbXSwiZnJlZXplQ3VycmVudFZhbHVlcyI6ZmFsc2UsImlzRmllbGRFeHBhbmRlZCI6ZmFsc2UsInByZXZlbnRBdXRvU2VsZWN0IjpmYWxzZSwiZmFjZXRTZWFyY2giOnsiY2FwdGlvbnMiOnt9LCJudW1iZXJPZlZhbHVlcyI6MTAsInF1ZXJ5IjoiIn0sImZhY2V0SWQiOiJjYXRfc2l6ZV90eXBlIiwiZmllbGQiOiJjYXRfc2l6ZV90eXBlIn0seyJkZWxpbWl0aW5nQ2hhcmFjdGVyIjoiPiIsImZpbHRlckZhY2V0Q291bnQiOnRydWUsImluamVjdGlvbkRlcHRoIjoxMDAwLCJudW1iZXJPZlZhbHVlcyI6NSwic29ydENyaXRlcmlhIjoib2NjdXJyZW5jZXMiLCJ0eXBlIjoic3BlY2lmaWMiLCJjdXJyZW50VmFsdWVzIjpbXSwiZnJlZXplQ3VycmVudFZhbHVlcyI6ZmFsc2UsImlzRmllbGRFeHBhbmRlZCI6ZmFsc2UsInByZXZlbnRBdXRvU2VsZWN0IjpmYWxzZSwiZmFjZXRTZWFyY2giOnsiY2FwdGlvbnMiOnt9LCJudW1iZXJPZlZhbHVlcyI6MTAsInF1ZXJ5IjoiIn0sImZhY2V0SWQiOiJjYXRfZ2VuZGVyIiwiZmllbGQiOiJjYXRfZ2VuZGVyIn0seyJkZWxpbWl0aW5nQ2hhcmFjdGVyIjoifCIsImZpbHRlckZhY2V0Q291bnQiOnRydWUsImluamVjdGlvbkRlcHRoIjoxMDAwLCJudW1iZXJPZlZhbHVlcyI6NSwic29ydENyaXRlcmlhIjoib2NjdXJyZW5jZXMiLCJiYXNlUGF0aCI6W10sImZpbHRlckJ5QmFzZVBhdGgiOnRydWUsImN1cnJlbnRWYWx1ZXMiOltdLCJwcmV2ZW50QXV0b1NlbGVjdCI6ZmFsc2UsInR5cGUiOiJoaWVyYXJjaGljYWwiLCJmYWNldFNlYXJjaCI6eyJjYXB0aW9ucyI6e30sIm51bWJlck9mVmFsdWVzIjoxMCwicXVlcnkiOiIifSwiZmllbGQiOiJlY19jYXRlZ29yeSIsImZhY2V0SWQiOiJlY19jYXRlZ29yeSJ9XSwibnVtYmVyT2ZSZXN1bHRzIjozMCwiZmlyc3RSZXN1bHQiOjAsImZhY2V0T3B0aW9ucyI6eyJmcmVlemVGYWNldE9yZGVyIjpmYWxzZX19JyAgIC0tY29tcHJlc3NlZA==",
  "fashion_response": ""
}
